-- phpMyAdmin SQL Dump
-- version 3.4.5
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Aug 03, 2017 at 08:27 AM
-- Server version: 5.5.23
-- PHP Version: 5.3.8

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `autoapps`
--

-- --------------------------------------------------------

--
-- Table structure for table `employee`
--

CREATE TABLE IF NOT EXISTS `employee` (
  `coreID` char(15) NOT NULL,
  `name` varchar(45) NOT NULL,
  `primary_team_id` char(6) DEFAULT NULL,
  `location_id` char(6) DEFAULT NULL,
  `passwd` varchar(12) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `tel` varchar(255) DEFAULT NULL,
  `last_visit` datetime DEFAULT '2009-01-01 00:00:00',
  `hits` int(10) unsigned DEFAULT '0',
  PRIMARY KEY (`coreID`),
  KEY `location_id` (`location_id`),
  KEY `primary_team_id` (`primary_team_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `employee`
--

INSERT INTO `employee` (`coreID`, `name`, `primary_team_id`, `location_id`, `passwd`, `email`, `tel`, `last_visit`, `hits`) VALUES
('id4888', 'Mauricio Capistran', 'SW', 'GDL', 'id4888', 'id4888@continental-corporation.com', '52-33-5555-5555', '0000-00-00 00:00:00', 0),
('id4889', 'Roberto Castro', 'SW', 'GDL', 'id4889', 'id4889@continental-corporation.com', '52-33-5555-5556', '0000-00-00 00:00:00', 0),
('id4890', 'Israel Camcho', 'SW', 'GDL', 'id4890', 'id4890@continental-corporation.com', '52-33-5555-5557', '0000-00-00 00:00:00', 0),
('id4891', 'Jonathan Dominguez', 'SW', 'GDL', 'id4891', 'id4891@continental-corporation.com', '52-33-5555-5558', '0000-00-00 00:00:00', 0),
('id4892', 'Jose Pesado', 'SW', 'GDL', 'id4892', 'id4892@continental-corporation.com', '52-33-5555-5559', '0000-00-00 00:00:00', 0),
('id4893', 'Manuel Huitrado', 'SW', 'GDL', 'id4893', 'id4893@continental-corporation.com', '52-33-5555-5560', '0000-00-00 00:00:00', 0),
('id4894', 'Guillermo Gomez', 'SW', 'GDL', 'id4894', 'id4894@continental-corporation.com', '52-33-5555-5561', '0000-00-00 00:00:00', 0),
('id4895', 'Piyush Anam', 'SW', 'ABH', 'id4895', 'id4895@continental-corporation.com', '52-33-5555-5562', '0000-00-00 00:00:00', 0),
('id4896', 'Pavan Lakshmipathi', 'SW', 'ABH', 'id4896', 'id4896@continental-corporation.com', '52-33-5555-5563', '0000-00-00 00:00:00', 0),
('id4897', 'Akshay Mysore', 'SW', 'ABH', 'id4897', 'id4897@continental-corporation.com', '52-33-5555-5564', '0000-00-00 00:00:00', 0),
('id4898', 'Srinivasa Pullabhatla', 'SW', 'ABH', 'id4898', 'id4898@continental-corporation.com', '52-33-5555-5565', '0000-00-00 00:00:00', 0),
('id4899', 'Manoj Vema', 'SW', 'ABH', 'id4899', 'id4899@continental-corporation.com', '52-33-5555-5566', '0000-00-00 00:00:00', 0),
('id4900', 'Jeff Bade', 'SW', 'ABH', 'id4900', 'id4900@continental-corporation.com', '52-33-5555-5567', '0000-00-00 00:00:00', 0),
('id4901', 'Jasaon Renaud', 'SE', 'ABH', 'id4901', 'id4901@continental-corporation.com', '52-33-5555-5568', '0000-00-00 00:00:00', 0),
('id4902', 'Rigoberto Rodriguez', 'FT', 'GDL', 'id4902', 'id4902@continental-corporation.com', '52-33-5555-5569', '0000-00-00 00:00:00', 0),
('id4903', 'Marco Rios', 'FT', 'GDL', 'id4903', 'id4903@continental-corporation.com', '52-33-5555-5570', '0000-00-00 00:00:00', 0),
('id4904', 'Oscar Vazquez', 'FT', 'GDL', 'id4904', 'id4904@continental-corporation.com', '52-33-5555-5571', '0000-00-00 00:00:00', 0),
('id4905', 'Antonio Gandara', 'SE', 'GDL', 'id4905', 'id4905@continental-corporation.com', '52-33-5555-5572', '0000-00-00 00:00:00', 0),
('id4906', 'David Castillo', 'SE', 'GDL', 'id4906', 'id4906@continental-corporation.com', '52-33-5555-5573', '0000-00-00 00:00:00', 0),
('id4907', 'Mario Perez', 'EE', 'GDL', 'id4907', 'id4907@continental-corporation.com', '52-33-5555-5574', '0000-00-00 00:00:00', 0),
('id4908', 'Alejandro Tapia', 'EE', 'GDL', 'id4908', 'id4908@continental-corporation.com', '52-33-5555-5575', '0000-00-00 00:00:00', 0),
('id4909', 'Juan Pablo Velazco', 'ME', 'GDL', 'id4909', 'id4909@continental-corporation.com', '52-33-5555-5576', '0000-00-00 00:00:00', 0),
('id4910', 'Alberto Sabas', 'ME', 'GDL', 'id4910', 'id4910@continental-corporation.com', '52-33-5555-5577', '0000-00-00 00:00:00', 0),
('id4911', 'User 100', 'SW', 'BBU', 'id4911', 'id4911@continental-corporation.com', '52-33-5555-5578', '0000-00-00 00:00:00', 0),
('id4912', 'User 101', 'SW', 'BBU', 'id4912', 'id4912@continental-corporation.com', '52-33-5555-5579', '0000-00-00 00:00:00', 0),
('id4913', 'User 102', 'SW', 'BBU', 'id4913', 'id4913@continental-corporation.com', '52-33-5555-5580', '0000-00-00 00:00:00', 0),
('id4914', 'User 103', 'SW', 'BBU', 'id4914', 'id4914@continental-corporation.com', '52-33-5555-5581', '0000-00-00 00:00:00', 0),
('id4915', 'User 104', 'SW', 'BBU', 'id4915', 'id4915@continental-corporation.com', '52-33-5555-5582', '0000-00-00 00:00:00', 0),
('id4916', 'User 105', 'SW', 'BBU', 'id4916', 'id4916@continental-corporation.com', '52-33-5555-5583', '0000-00-00 00:00:00', 0),
('id4917', 'User 106', 'EE', 'BBU', 'id4917', 'id4917@continental-corporation.com', '52-33-5555-5584', '0000-00-00 00:00:00', 0),
('id4918', 'User 107', 'EE', 'BBU', 'id4918', 'id4918@continental-corporation.com', '52-33-5555-5585', '0000-00-00 00:00:00', 0),
('id4919', 'User 108', 'EE', 'BBU', 'id4919', 'id4919@continental-corporation.com', '52-33-5555-5586', '0000-00-00 00:00:00', 0),
('id4920', 'User 109', 'EE', 'BBU', 'id4920', 'id4920@continental-corporation.com', '52-33-5555-5587', '0000-00-00 00:00:00', 0),
('id4921', 'User 110', 'EE', 'BBU', 'id4921', 'id4921@continental-corporation.com', '52-33-5555-5588', '0000-00-00 00:00:00', 0),
('id4922', 'User 111', 'EE', 'BBU', 'id4922', 'id4922@continental-corporation.com', '52-33-5555-5589', '0000-00-00 00:00:00', 0),
('id4923', 'User 112', 'SE', 'BBU', 'id4923', 'id4923@continental-corporation.com', '52-33-5555-5590', '0000-00-00 00:00:00', 0),
('id4924', 'User 113', 'SE', 'BBU', 'id4924', 'id4924@continental-corporation.com', '52-33-5555-5591', '0000-00-00 00:00:00', 0),
('id4925', 'User 114', 'SE', 'BBU', 'id4925', 'id4925@continental-corporation.com', '52-33-5555-5592', '0000-00-00 00:00:00', 0),
('id4926', 'User 115', 'SE', 'BBU', 'id4926', 'id4926@continental-corporation.com', '52-33-5555-5593', '0000-00-00 00:00:00', 1),
('id4927', 'User 116', 'SE', 'BBU', 'id4927', 'id4927@continental-corporation.com', '52-33-5555-5594', '0000-00-00 00:00:00', 2),
('id4928', 'User 117', 'SE', 'BBU', 'id4928', 'id4928@continental-corporation.com', '52-33-5555-5595', '0000-00-00 00:00:00', 3),
('id4929', 'User 118', 'SE', 'BBU', 'id4929', 'id4929@continental-corporation.com', '52-33-5555-5596', '0000-00-00 00:00:00', 4),
('id4930', 'User 119', 'ME', 'BBU', 'id4930', 'id4930@continental-corporation.com', '52-33-5555-5597', '0000-00-00 00:00:00', 5),
('id4931', 'User 120', 'ME', 'BBU', 'id4931', 'id4931@continental-corporation.com', '52-33-5555-5598', '0000-00-00 00:00:00', 6),
('id4932', 'User 121', 'ME', 'BBU', 'id4932', 'id4932@continental-corporation.com', '52-33-5555-5599', '0000-00-00 00:00:00', 7),
('id4933', 'User 122', 'ME', 'BBU', 'id4933', 'id4933@continental-corporation.com', '52-33-5555-5600', '0000-00-00 00:00:00', 8),
('id4934', 'User 123', 'ME', 'BBU', 'id4934', 'id4934@continental-corporation.com', '52-33-5555-5601', '0000-00-00 00:00:00', 9),
('id4935', 'User 124', 'ME', 'BBU', 'id4935', 'id4935@continental-corporation.com', '52-33-5555-5602', '0000-00-00 00:00:00', 10),
('id4936', 'User 125', 'ME', 'BBU', 'id4936', 'id4936@continental-corporation.com', '52-33-5555-5603', '0000-00-00 00:00:00', 11),
('id4937', 'User 126', 'ME', 'BBU', 'id4937', 'id4937@continental-corporation.com', '52-33-5555-5604', '0000-00-00 00:00:00', 12),
('id4938', 'User 127', 'FT', 'BBU', 'id4938', 'id4938@continental-corporation.com', '52-33-5555-5605', '0000-00-00 00:00:00', 13),
('id4939', 'User 128', 'FT', 'BBU', 'id4939', 'id4939@continental-corporation.com', '52-33-5555-5606', '0000-00-00 00:00:00', 14),
('id4940', 'User 129', 'FT', 'BBU', 'id4940', 'id4940@continental-corporation.com', '52-33-5555-5607', '0000-00-00 00:00:00', 15),
('id4941', 'User 130', 'FT', 'BBU', 'id4941', 'id4941@continental-corporation.com', '52-33-5555-5608', '0000-00-00 00:00:00', 16),
('id4942', 'User 131', 'FT', 'BBU', 'id4942', 'id4942@continental-corporation.com', '52-33-5555-5609', '0000-00-00 00:00:00', 17),
('id4943', 'User 132', 'FT', 'BBU', 'id4943', 'id4943@continental-corporation.com', '52-33-5555-5610', '0000-00-00 00:00:00', 18),
('id4944', 'User 133', 'SW', 'TSR', 'id4944', 'id4944@continental-corporation.com', '52-33-5555-5611', '0000-00-00 00:00:00', 19),
('id4945', 'User 134', 'SW', 'TSR', 'id4945', 'id4945@continental-corporation.com', '52-33-5555-5612', '0000-00-00 00:00:00', 20),
('id4946', 'User 135', 'SW', 'TSR', 'id4946', 'id4946@continental-corporation.com', '52-33-5555-5613', '0000-00-00 00:00:00', 21),
('id4947', 'User 136', 'SW', 'TSR', 'id4947', 'id4947@continental-corporation.com', '52-33-5555-5614', '0000-00-00 00:00:00', 22),
('id4948', 'User 137', 'SW', 'TSR', 'id4948', 'id4948@continental-corporation.com', '52-33-5555-5615', '0000-00-00 00:00:00', 23),
('id4949', 'User 138', 'SW', 'TSR', 'id4949', 'id4949@continental-corporation.com', '52-33-5555-5616', '0000-00-00 00:00:00', 24),
('id4950', 'User 139', 'EE', 'TSR', 'id4950', 'id4950@continental-corporation.com', '52-33-5555-5617', '0000-00-00 00:00:00', 25),
('id4951', 'User 140', 'EE', 'TSR', 'id4951', 'id4951@continental-corporation.com', '52-33-5555-5618', '0000-00-00 00:00:00', 26),
('id4952', 'User 141', 'EE', 'TSR', 'id4952', 'id4952@continental-corporation.com', '52-33-5555-5619', '0000-00-00 00:00:00', 27),
('id4953', 'User 142', 'EE', 'TSR', 'id4953', 'id4953@continental-corporation.com', '52-33-5555-5620', '0000-00-00 00:00:00', 28),
('id4954', 'User 143', 'EE', 'TSR', 'id4954', 'id4954@continental-corporation.com', '52-33-5555-5621', '0000-00-00 00:00:00', 29),
('id4955', 'User 144', 'EE', 'TSR', 'id4955', 'id4955@continental-corporation.com', '52-33-5555-5622', '0000-00-00 00:00:00', 30),
('id4956', 'User 145', 'SE', 'TSR', 'id4956', 'id4956@continental-corporation.com', '52-33-5555-5623', '0000-00-00 00:00:00', 31),
('id4957', 'User 146', 'SE', 'TSR', 'id4957', 'id4957@continental-corporation.com', '52-33-5555-5624', '0000-00-00 00:00:00', 32),
('id4958', 'User 147', 'SE', 'TSR', 'id4958', 'id4958@continental-corporation.com', '52-33-5555-5625', '0000-00-00 00:00:00', 33),
('id4959', 'User 148', 'SE', 'TSR', 'id4959', 'id4959@continental-corporation.com', '52-33-5555-5626', '0000-00-00 00:00:00', 34),
('id4960', 'User 149', 'SE', 'TSR', 'id4960', 'id4960@continental-corporation.com', '52-33-5555-5627', '0000-00-00 00:00:00', 35),
('id4961', 'User 150', 'SE', 'TSR', 'id4961', 'id4961@continental-corporation.com', '52-33-5555-5628', '0000-00-00 00:00:00', 36),
('id4962', 'User 151', 'SE', 'TSR', 'id4962', 'id4962@continental-corporation.com', '52-33-5555-5629', '0000-00-00 00:00:00', 37),
('id4963', 'User 152', 'ME', 'TSR', 'id4963', 'id4963@continental-corporation.com', '52-33-5555-5630', '0000-00-00 00:00:00', 38),
('id4964', 'User 153', 'ME', 'TSR', 'id4964', 'id4964@continental-corporation.com', '52-33-5555-5631', '0000-00-00 00:00:00', 39),
('id4965', 'User 154', 'ME', 'TSR', 'id4965', 'id4965@continental-corporation.com', '52-33-5555-5632', '0000-00-00 00:00:00', 40),
('id4966', 'User 155', 'ME', 'TSR', 'id4966', 'id4966@continental-corporation.com', '52-33-5555-5633', '0000-00-00 00:00:00', 41),
('id4967', 'User 156', 'ME', 'TSR', 'id4967', 'id4967@continental-corporation.com', '52-33-5555-5634', '0000-00-00 00:00:00', 42),
('id4968', 'User 157', 'ME', 'TSR', 'id4968', 'id4968@continental-corporation.com', '52-33-5555-5635', '0000-00-00 00:00:00', 43),
('id4969', 'User 158', 'ME', 'TSR', 'id4969', 'id4969@continental-corporation.com', '52-33-5555-5636', '0000-00-00 00:00:00', 44),
('id4970', 'User 159', 'ME', 'TSR', 'id4970', 'id4970@continental-corporation.com', '52-33-5555-5637', '0000-00-00 00:00:00', 45),
('id4971', 'User 160', 'FT', 'TSR', 'id4971', 'id4971@continental-corporation.com', '52-33-5555-5638', '0000-00-00 00:00:00', 46),
('id4972', 'User 161', 'FT', 'TSR', 'id4972', 'id4972@continental-corporation.com', '52-33-5555-5639', '0000-00-00 00:00:00', 47),
('id4973', 'User 162', 'FT', 'TSR', 'id4973', 'id4973@continental-corporation.com', '52-33-5555-5640', '0000-00-00 00:00:00', 48),
('id4974', 'User 163', 'FT', 'TSR', 'id4974', 'id4974@continental-corporation.com', '52-33-5555-5641', '0000-00-00 00:00:00', 49),
('id4975', 'User 164', 'FT', 'TSR', 'id4975', 'id4975@continental-corporation.com', '52-33-5555-5642', '0000-00-00 00:00:00', 50),
('id4976', 'User 165', 'FT', 'TSR', 'id4976', 'id4976@continental-corporation.com', '52-33-5555-5643', '0000-00-00 00:00:00', 51),
('id4977', 'User 166', 'SW', 'SGP', 'id4977', 'id4977@continental-corporation.com', '52-33-5555-5644', '0000-00-00 00:00:00', 52),
('id4978', 'User 167', 'SW', 'SGP', 'id4978', 'id4978@continental-corporation.com', '52-33-5555-5645', '0000-00-00 00:00:00', 53),
('id4979', 'User 168', 'SW', 'SGP', 'id4979', 'id4979@continental-corporation.com', '52-33-5555-5646', '0000-00-00 00:00:00', 54),
('id4980', 'User 169', 'SW', 'SGP', 'id4980', 'id4980@continental-corporation.com', '52-33-5555-5647', '0000-00-00 00:00:00', 55),
('id4981', 'User 170', 'SW', 'SGP', 'id4981', 'id4981@continental-corporation.com', '52-33-5555-5648', '0000-00-00 00:00:00', 56),
('id4982', 'User 171', 'SW', 'SGP', 'id4982', 'id4982@continental-corporation.com', '52-33-5555-5649', '0000-00-00 00:00:00', 57),
('id4983', 'User 172', 'EE', 'SGP', 'id4983', 'id4983@continental-corporation.com', '52-33-5555-5650', '0000-00-00 00:00:00', 58),
('id4984', 'User 173', 'EE', 'SGP', 'id4984', 'id4984@continental-corporation.com', '52-33-5555-5651', '0000-00-00 00:00:00', 59),
('id4985', 'User 174', 'EE', 'SGP', 'id4985', 'id4985@continental-corporation.com', '52-33-5555-5652', '0000-00-00 00:00:00', 60),
('id4986', 'User 175', 'EE', 'SGP', 'id4986', 'id4986@continental-corporation.com', '52-33-5555-5653', '0000-00-00 00:00:00', 61),
('id4987', 'User 176', 'EE', 'SGP', 'id4987', 'id4987@continental-corporation.com', '52-33-5555-5654', '0000-00-00 00:00:00', 62),
('id4988', 'User 177', 'EE', 'SGP', 'id4988', 'id4988@continental-corporation.com', '52-33-5555-5655', '0000-00-00 00:00:00', 63),
('id4989', 'User 178', 'SE', 'SGP', 'id4989', 'id4989@continental-corporation.com', '52-33-5555-5656', '0000-00-00 00:00:00', 64),
('id4990', 'User 179', 'SE', 'SGP', 'id4990', 'id4990@continental-corporation.com', '52-33-5555-5657', '0000-00-00 00:00:00', 65),
('id4991', 'User 180', 'SE', 'SGP', 'id4991', 'id4991@continental-corporation.com', '52-33-5555-5658', '0000-00-00 00:00:00', 66),
('id4992', 'User 181', 'SE', 'SGP', 'id4992', 'id4992@continental-corporation.com', '52-33-5555-5659', '0000-00-00 00:00:00', 67),
('id4993', 'User 182', 'SE', 'SGP', 'id4993', 'id4993@continental-corporation.com', '52-33-5555-5660', '0000-00-00 00:00:00', 68),
('id4994', 'User 183', 'SE', 'SGP', 'id4994', 'id4994@continental-corporation.com', '52-33-5555-5661', '0000-00-00 00:00:00', 69),
('id4995', 'User 184', 'SE', 'SGP', 'id4995', 'id4995@continental-corporation.com', '52-33-5555-5662', '0000-00-00 00:00:00', 70),
('id4996', 'User 185', 'ME', 'SGP', 'id4996', 'id4996@continental-corporation.com', '52-33-5555-5663', '0000-00-00 00:00:00', 71),
('id4997', 'User 186', 'ME', 'SGP', 'id4997', 'id4997@continental-corporation.com', '52-33-5555-5664', '0000-00-00 00:00:00', 72),
('id4998', 'User 187', 'ME', 'SGP', 'id4998', 'id4998@continental-corporation.com', '52-33-5555-5665', '0000-00-00 00:00:00', 73),
('id4999', 'User 188', 'ME', 'SGP', 'id4999', 'id4999@continental-corporation.com', '52-33-5555-5666', '0000-00-00 00:00:00', 74),
('id5000', 'User 189', 'ME', 'SGP', 'id5000', 'id5000@continental-corporation.com', '52-33-5555-5667', '0000-00-00 00:00:00', 75),
('id5001', 'User 190', 'ME', 'SGP', 'id5001', 'id5001@continental-corporation.com', '52-33-5555-5668', '0000-00-00 00:00:00', 76),
('id5002', 'User 191', 'ME', 'SGP', 'id5002', 'id5002@continental-corporation.com', '52-33-5555-5669', '0000-00-00 00:00:00', 77),
('id5003', 'User 192', 'ME', 'SGP', 'id5003', 'id5003@continental-corporation.com', '52-33-5555-5670', '0000-00-00 00:00:00', 78),
('id5004', 'User 193', 'FT', 'SGP', 'id5004', 'id5004@continental-corporation.com', '52-33-5555-5671', '0000-00-00 00:00:00', 79),
('id5005', 'User 194', 'FT', 'SGP', 'id5005', 'id5005@continental-corporation.com', '52-33-5555-5672', '0000-00-00 00:00:00', 80),
('id5006', 'User 195', 'FT', 'SGP', 'id5006', 'id5006@continental-corporation.com', '52-33-5555-5673', '0000-00-00 00:00:00', 81),
('id5007', 'User 196', 'FT', 'SGP', 'id5007', 'id5007@continental-corporation.com', '52-33-5555-5674', '0000-00-00 00:00:00', 82),
('id5008', 'User 197', 'FT', 'SGP', 'id5008', 'id5008@continental-corporation.com', '52-33-5555-5675', '0000-00-00 00:00:00', 83),
('id5009', 'User 198', 'FT', 'SGP', 'id5009', 'id5009@continental-corporation.com', '52-33-5555-5676', '0000-00-00 00:00:00', 84),
('id5010', 'User 199', 'SW', 'NJG', 'id5010', 'id5010@continental-corporation.com', '52-33-5555-5677', '0000-00-00 00:00:00', 85),
('id5011', 'User 200', 'SW', 'NJG', 'id5011', 'id5011@continental-corporation.com', '52-33-5555-5678', '0000-00-00 00:00:00', 86),
('id5012', 'User 201', 'SW', 'NJG', 'id5012', 'id5012@continental-corporation.com', '52-33-5555-5679', '0000-00-00 00:00:00', 87),
('id5013', 'User 202', 'SW', 'NJG', 'id5013', 'id5013@continental-corporation.com', '52-33-5555-5680', '0000-00-00 00:00:00', 88),
('id5014', 'User 203', 'SW', 'NJG', 'id5014', 'id5014@continental-corporation.com', '52-33-5555-5681', '0000-00-00 00:00:00', 89),
('id5015', 'User 204', 'SW', 'NJG', 'id5015', 'id5015@continental-corporation.com', '52-33-5555-5682', '0000-00-00 00:00:00', 90),
('id5016', 'User 205', 'EE', 'NJG', 'id5016', 'id5016@continental-corporation.com', '52-33-5555-5683', '0000-00-00 00:00:00', 91),
('id5017', 'User 206', 'EE', 'NJG', 'id5017', 'id5017@continental-corporation.com', '52-33-5555-5684', '0000-00-00 00:00:00', 92),
('id5018', 'User 207', 'EE', 'NJG', 'id5018', 'id5018@continental-corporation.com', '52-33-5555-5685', '0000-00-00 00:00:00', 93),
('id5019', 'User 208', 'EE', 'NJG', 'id5019', 'id5019@continental-corporation.com', '52-33-5555-5686', '0000-00-00 00:00:00', 94),
('id5020', 'User 209', 'EE', 'NJG', 'id5020', 'id5020@continental-corporation.com', '52-33-5555-5687', '0000-00-00 00:00:00', 95),
('id5021', 'User 210', 'EE', 'NJG', 'id5021', 'id5021@continental-corporation.com', '52-33-5555-5688', '0000-00-00 00:00:00', 96),
('id5022', 'User 211', 'SE', 'NJG', 'id5022', 'id5022@continental-corporation.com', '52-33-5555-5689', '0000-00-00 00:00:00', 97),
('id5023', 'User 212', 'SE', 'NJG', 'id5023', 'id5023@continental-corporation.com', '52-33-5555-5690', '0000-00-00 00:00:00', 98),
('id5024', 'User 213', 'SE', 'NJG', 'id5024', 'id5024@continental-corporation.com', '52-33-5555-5691', '0000-00-00 00:00:00', 99),
('id5025', 'User 214', 'SE', 'NJG', 'id5025', 'id5025@continental-corporation.com', '52-33-5555-5692', '0000-00-00 00:00:00', 100),
('id5026', 'User 215', 'SE', 'NJG', 'id5026', 'id5026@continental-corporation.com', '52-33-5555-5693', '0000-00-00 00:00:00', 101),
('id5027', 'User 216', 'SE', 'NJG', 'id5027', 'id5027@continental-corporation.com', '52-33-5555-5694', '0000-00-00 00:00:00', 102),
('id5028', 'User 217', 'SE', 'NJG', 'id5028', 'id5028@continental-corporation.com', '52-33-5555-5695', '0000-00-00 00:00:00', 103),
('id5029', 'User 218', 'ME', 'NJG', 'id5029', 'id5029@continental-corporation.com', '52-33-5555-5696', '0000-00-00 00:00:00', 104),
('id5030', 'User 219', 'ME', 'NJG', 'id5030', 'id5030@continental-corporation.com', '52-33-5555-5697', '0000-00-00 00:00:00', 105),
('id5031', 'User 220', 'ME', 'NJG', 'id5031', 'id5031@continental-corporation.com', '52-33-5555-5698', '0000-00-00 00:00:00', 106),
('id5032', 'User 221', 'ME', 'NJG', 'id5032', 'id5032@continental-corporation.com', '52-33-5555-5699', '0000-00-00 00:00:00', 107),
('id5033', 'User 222', 'ME', 'NJG', 'id5033', 'id5033@continental-corporation.com', '52-33-5555-5700', '0000-00-00 00:00:00', 108),
('id5034', 'User 223', 'ME', 'NJG', 'id5034', 'id5034@continental-corporation.com', '52-33-5555-5701', '0000-00-00 00:00:00', 109),
('id5035', 'User 224', 'ME', 'NJG', 'id5035', 'id5035@continental-corporation.com', '52-33-5555-5702', '0000-00-00 00:00:00', 110),
('id5036', 'User 225', 'ME', 'NJG', 'id5036', 'id5036@continental-corporation.com', '52-33-5555-5703', '0000-00-00 00:00:00', 111),
('id5037', 'User 226', 'FT', 'NJG', 'id5037', 'id5037@continental-corporation.com', '52-33-5555-5704', '0000-00-00 00:00:00', 112),
('id5038', 'User 227', 'FT', 'NJG', 'id5038', 'id5038@continental-corporation.com', '52-33-5555-5705', '0000-00-00 00:00:00', 113),
('id5039', 'User 228', 'FT', 'NJG', 'id5039', 'id5039@continental-corporation.com', '52-33-5555-5706', '0000-00-00 00:00:00', 114),
('id5040', 'User 229', 'FT', 'NJG', 'id5040', 'id5040@continental-corporation.com', '52-33-5555-5707', '0000-00-00 00:00:00', 115),
('id5041', 'User 230', 'FT', 'NJG', 'id5041', 'id5041@continental-corporation.com', '52-33-5555-5708', '0000-00-00 00:00:00', 116),
('id5042', 'User 231', 'FT', 'NJG', 'id5042', 'id5042@continental-corporation.com', '52-33-5555-5709', '0000-00-00 00:00:00', 117),
('id5043', 'User 232', 'SW', 'WHU', 'id5043', 'id5043@continental-corporation.com', '52-33-5555-5710', '0000-00-00 00:00:00', 118),
('id5044', 'User 233', 'SW', 'WHU', 'id5044', 'id5044@continental-corporation.com', '52-33-5555-5711', '0000-00-00 00:00:00', 119),
('id5045', 'User 234', 'SW', 'WHU', 'id5045', 'id5045@continental-corporation.com', '52-33-5555-5712', '0000-00-00 00:00:00', 120),
('id5046', 'User 235', 'SW', 'WHU', 'id5046', 'id5046@continental-corporation.com', '52-33-5555-5713', '0000-00-00 00:00:00', 121),
('id5047', 'User 236', 'SW', 'WHU', 'id5047', 'id5047@continental-corporation.com', '52-33-5555-5714', '0000-00-00 00:00:00', 122),
('id5048', 'User 237', 'SW', 'WHU', 'id5048', 'id5048@continental-corporation.com', '52-33-5555-5715', '0000-00-00 00:00:00', 123),
('id5049', 'User 238', 'EE', 'WHU', 'id5049', 'id5049@continental-corporation.com', '52-33-5555-5716', '0000-00-00 00:00:00', 124),
('id5050', 'User 239', 'EE', 'WHU', 'id5050', 'id5050@continental-corporation.com', '52-33-5555-5717', '0000-00-00 00:00:00', 125),
('id5051', 'User 240', 'EE', 'WHU', 'id5051', 'id5051@continental-corporation.com', '52-33-5555-5718', '0000-00-00 00:00:00', 126),
('id5052', 'User 241', 'EE', 'WHU', 'id5052', 'id5052@continental-corporation.com', '52-33-5555-5719', '0000-00-00 00:00:00', 127),
('id5053', 'User 242', 'EE', 'WHU', 'id5053', 'id5053@continental-corporation.com', '52-33-5555-5720', '0000-00-00 00:00:00', 128),
('id5054', 'User 243', 'EE', 'WHU', 'id5054', 'id5054@continental-corporation.com', '52-33-5555-5721', '0000-00-00 00:00:00', 129),
('id5055', 'User 244', 'SE', 'WHU', 'id5055', 'id5055@continental-corporation.com', '52-33-5555-5722', '0000-00-00 00:00:00', 130),
('id5056', 'User 245', 'SE', 'WHU', 'id5056', 'id5056@continental-corporation.com', '52-33-5555-5723', '0000-00-00 00:00:00', 131),
('id5057', 'User 246', 'SE', 'WHU', 'id5057', 'id5057@continental-corporation.com', '52-33-5555-5724', '0000-00-00 00:00:00', 132),
('id5058', 'User 247', 'SE', 'WHU', 'id5058', 'id5058@continental-corporation.com', '52-33-5555-5725', '0000-00-00 00:00:00', 133),
('id5059', 'User 248', 'SE', 'WHU', 'id5059', 'id5059@continental-corporation.com', '52-33-5555-5726', '0000-00-00 00:00:00', 134),
('id5060', 'User 249', 'SE', 'WHU', 'id5060', 'id5060@continental-corporation.com', '52-33-5555-5727', '0000-00-00 00:00:00', 135),
('id5061', 'User 250', 'SE', 'WHU', 'id5061', 'id5061@continental-corporation.com', '52-33-5555-5728', '0000-00-00 00:00:00', 136),
('id5062', 'User 251', 'ME', 'WHU', 'id5062', 'id5062@continental-corporation.com', '52-33-5555-5729', '0000-00-00 00:00:00', 137),
('id5063', 'User 252', 'ME', 'WHU', 'id5063', 'id5063@continental-corporation.com', '52-33-5555-5730', '0000-00-00 00:00:00', 138),
('id5064', 'User 253', 'ME', 'WHU', 'id5064', 'id5064@continental-corporation.com', '52-33-5555-5731', '0000-00-00 00:00:00', 139),
('id5065', 'User 254', 'ME', 'WHU', 'id5065', 'id5065@continental-corporation.com', '52-33-5555-5732', '0000-00-00 00:00:00', 140),
('id5066', 'User 255', 'ME', 'WHU', 'id5066', 'id5066@continental-corporation.com', '52-33-5555-5733', '0000-00-00 00:00:00', 141),
('id5067', 'User 256', 'ME', 'WHU', 'id5067', 'id5067@continental-corporation.com', '52-33-5555-5734', '0000-00-00 00:00:00', 142),
('id5068', 'User 257', 'ME', 'WHU', 'id5068', 'id5068@continental-corporation.com', '52-33-5555-5735', '0000-00-00 00:00:00', 143),
('id5069', 'User 258', 'ME', 'WHU', 'id5069', 'id5069@continental-corporation.com', '52-33-5555-5736', '0000-00-00 00:00:00', 144),
('id5070', 'User 259', 'FT', 'WHU', 'id5070', 'id5070@continental-corporation.com', '52-33-5555-5737', '0000-00-00 00:00:00', 145),
('id5071', 'User 260', 'FT', 'WHU', 'id5071', 'id5071@continental-corporation.com', '52-33-5555-5738', '0000-00-00 00:00:00', 146),
('id5072', 'User 261', 'FT', 'WHU', 'id5072', 'id5072@continental-corporation.com', '52-33-5555-5739', '0000-00-00 00:00:00', 147),
('id5073', 'User 262', 'FT', 'WHU', 'id5073', 'id5073@continental-corporation.com', '52-33-5555-5740', '0000-00-00 00:00:00', 148),
('id5074', 'User 263', 'FT', 'WHU', 'id5074', 'id5074@continental-corporation.com', '52-33-5555-5741', '0000-00-00 00:00:00', 149),
('id5075', 'User 264', 'FT', 'WHU', 'id5075', 'id5075@continental-corporation.com', '52-33-5555-5742', '0000-00-00 00:00:00', 150);

-- --------------------------------------------------------

--
-- Table structure for table `employee_has_skill`
--

CREATE TABLE IF NOT EXISTS `employee_has_skill` (
  `employee_coreID` char(6) NOT NULL,
  `skill_idskill` int(11) NOT NULL,
  `lvlOfExpert` int(11) NOT NULL DEFAULT '0',
  `lvlOfIntr` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`employee_coreID`,`skill_idskill`),
  KEY `fk_employee_has_skill_employee` (`employee_coreID`),
  KEY `fk_employee_has_skill_skill` (`skill_idskill`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `employee_has_skill`
--

INSERT INTO `employee_has_skill` (`employee_coreID`, `skill_idskill`, `lvlOfExpert`, `lvlOfIntr`) VALUES
('id4888', 0, 0, 0),
('id4888', 50, 0, 2),
('id4888', 52, 2, 0),
('id4888', 54, 0, 2),
('id4888', 55, 0, 1),
('id4888', 56, 0, 2),
('id4888', 57, 1, 2),
('id4888', 58, 0, 2),
('id4888', 60, 3, 0),
('id4888', 67, 1, 2),
('id4888', 68, 1, 0),
('id4888', 70, 1, 1),
('id4888', 71, 2, 2),
('id4888', 72, 2, 3),
('id4888', 73, 1, 2),
('id4888', 74, 1, 0),
('id4888', 75, 1, 0),
('id4888', 78, 3, 3),
('id4888', 79, 3, 3),
('id4888', 80, 3, 3),
('id4888', 81, 1, 0),
('id4888', 82, 1, 1),
('id4888', 83, 0, 2),
('id4888', 84, 0, 2),
('id4888', 85, 2, 1),
('id4888', 86, 1, 1),
('id4888', 87, 1, 0),
('id4888', 93, 2, 3),
('id4888', 94, 2, 4),
('id4888', 95, 1, 4),
('id4888', 96, 0, 1),
('id4888', 100, 3, 3),
('id4888', 101, 1, 0),
('id4888', 102, 3, 2),
('id4888', 103, 3, 3),
('id4888', 104, 1, 0),
('id4888', 105, 3, 3),
('id4888', 106, 2, 1),
('id4888', 107, 2, 1),
('id4888', 108, 1, 0),
('id4888', 109, 2, 0),
('id4888', 111, 1, 0),
('id4888', 112, 0, 1),
('id4888', 113, 0, 3),
('id4888', 115, 1, 1),
('id4888', 116, 1, 2),
('id4888', 117, 1, 1),
('id4888', 118, 1, 3),
('id4888', 123, 1, 2),
('id4888', 126, 1, 1),
('id4888', 129, 2, 2),
('id4888', 134, 1, 2),
('id4888', 135, 2, 2),
('id4888', 136, 0, 1),
('id4888', 142, 1, 1),
('id4888', 144, 1, 0),
('id4888', 154, 1, 0),
('id4888', 161, 1, 0),
('id4888', 163, 1, 0),
('id4888', 164, 1, 0),
('id4888', 165, 1, 0),
('id4888', 166, 1, 0),
('id4888', 167, 2, 2),
('id4888', 171, 1, 4),
('id4888', 173, 1, 0),
('id4888', 174, 1, 3),
('id4888', 175, 2, 2),
('id4888', 298, 1, 2),
('id4888', 370, 2, 0),
('id4888', 379, 3, 0),
('id4888', 383, 2, 0),
('id4888', 385, 1, 2),
('id4888', 405, 3, 2),
('id4888', 408, 2, 0),
('id4888', 419, 0, 2),
('id4889', 78, 3, 1),
('id4889', 81, 0, 3),
('id4889', 102, 0, 2),
('id4889', 108, 3, 2),
('id4889', 114, 3, 3),
('id4889', 118, 1, 0),
('id4889', 291, 2, 1),
('id4889', 322, 3, 3),
('id4889', 380, 3, 0),
('id4889', 381, 0, 1),
('id4889', 382, 2, 0),
('id4889', 394, 2, 2),
('id4889', 395, 0, 0),
('id4889', 396, 2, 2),
('id4889', 397, 0, 0),
('id4889', 398, 2, 3),
('id4889', 405, 2, 2),
('id4889', 407, 3, 3),
('id4889', 419, 2, 2),
('id4890', 78, 0, 3),
('id4890', 81, 0, 0),
('id4890', 102, 0, 1),
('id4890', 108, 1, 0),
('id4890', 114, 1, 2),
('id4890', 118, 0, 1),
('id4890', 291, 1, 0),
('id4890', 322, 1, 1),
('id4890', 380, 0, 0),
('id4890', 381, 0, 2),
('id4890', 382, 3, 3),
('id4890', 394, 1, 2),
('id4890', 395, 0, 2),
('id4890', 396, 1, 2),
('id4890', 397, 2, 3),
('id4890', 398, 1, 3),
('id4890', 405, 2, 1),
('id4890', 407, 3, 2),
('id4890', 419, 1, 1),
('id4891', 78, 1, 3),
('id4891', 81, 1, 2),
('id4891', 102, 2, 2),
('id4891', 108, 1, 0),
('id4891', 114, 2, 0),
('id4891', 118, 0, 0),
('id4891', 291, 2, 2),
('id4891', 322, 1, 1),
('id4891', 380, 2, 0),
('id4891', 381, 1, 3),
('id4891', 382, 0, 0),
('id4891', 394, 0, 1),
('id4891', 395, 1, 2),
('id4891', 396, 1, 2),
('id4891', 397, 2, 0),
('id4891', 398, 0, 0),
('id4891', 405, 0, 1),
('id4891', 407, 2, 1),
('id4891', 419, 3, 1),
('id4892', 78, 1, 1),
('id4892', 81, 3, 3),
('id4892', 102, 2, 1),
('id4892', 108, 2, 0),
('id4892', 114, 1, 2),
('id4892', 118, 2, 2),
('id4892', 291, 0, 0),
('id4892', 322, 0, 3),
('id4892', 380, 2, 1),
('id4892', 381, 1, 1),
('id4892', 382, 2, 0),
('id4892', 394, 0, 3),
('id4892', 395, 2, 1),
('id4892', 396, 2, 1),
('id4892', 397, 2, 1),
('id4892', 398, 0, 1),
('id4892', 405, 3, 0),
('id4892', 407, 3, 0),
('id4892', 419, 3, 2),
('id4893', 78, 2, 0),
('id4893', 81, 1, 3),
('id4893', 102, 2, 1),
('id4893', 108, 1, 2),
('id4893', 114, 0, 2),
('id4893', 118, 2, 2),
('id4893', 291, 1, 3),
('id4893', 322, 0, 2),
('id4893', 380, 1, 3),
('id4893', 381, 3, 0),
('id4893', 382, 0, 0),
('id4893', 394, 1, 1),
('id4893', 395, 0, 3),
('id4893', 396, 3, 3),
('id4893', 397, 1, 1),
('id4893', 398, 1, 0),
('id4893', 405, 1, 2),
('id4893', 407, 1, 3),
('id4893', 419, 2, 3),
('id4894', 78, 3, 3),
('id4894', 81, 3, 3),
('id4894', 102, 0, 2),
('id4894', 108, 0, 3),
('id4894', 114, 0, 2),
('id4894', 118, 2, 2),
('id4894', 291, 0, 3),
('id4894', 322, 3, 0),
('id4894', 380, 2, 1),
('id4894', 381, 3, 2),
('id4894', 382, 1, 2),
('id4894', 394, 2, 3),
('id4894', 395, 2, 0),
('id4894', 396, 0, 0),
('id4894', 397, 0, 2),
('id4894', 398, 3, 2),
('id4894', 405, 1, 0),
('id4894', 407, 3, 1),
('id4894', 419, 3, 1),
('id4895', 78, 2, 2),
('id4895', 81, 2, 2),
('id4895', 102, 2, 2),
('id4895', 108, 2, 1),
('id4895', 114, 0, 1),
('id4895', 118, 2, 1),
('id4895', 291, 2, 2),
('id4895', 322, 1, 2),
('id4895', 380, 2, 1),
('id4895', 381, 0, 1),
('id4895', 382, 2, 1),
('id4895', 394, 0, 2),
('id4895', 395, 2, 1),
('id4895', 396, 1, 2),
('id4895', 397, 2, 2),
('id4895', 398, 0, 2),
('id4895', 405, 2, 2),
('id4895', 407, 1, 2),
('id4895', 419, 2, 1),
('id4896', 78, 2, 1),
('id4896', 81, 0, 1),
('id4896', 102, 0, 0),
('id4896', 108, 2, 0),
('id4896', 114, 2, 2),
('id4896', 118, 0, 2),
('id4896', 291, 0, 1),
('id4896', 322, 1, 0),
('id4896', 380, 1, 2),
('id4896', 381, 2, 2),
('id4896', 382, 2, 1),
('id4896', 394, 0, 0),
('id4896', 395, 2, 2),
('id4896', 396, 2, 2),
('id4896', 397, 2, 0),
('id4896', 398, 2, 2),
('id4896', 405, 0, 0),
('id4896', 407, 2, 1),
('id4896', 419, 0, 2),
('id4897', 78, 0, 2),
('id4897', 81, 2, 0),
('id4897', 102, 2, 2),
('id4897', 108, 2, 2),
('id4897', 114, 2, 0),
('id4897', 118, 0, 2),
('id4897', 291, 2, 2),
('id4897', 322, 2, 2),
('id4897', 380, 2, 1),
('id4897', 381, 0, 2),
('id4897', 382, 0, 1),
('id4897', 394, 1, 2),
('id4897', 395, 2, 0),
('id4897', 396, 2, 2),
('id4897', 397, 2, 1),
('id4897', 398, 2, 0),
('id4897', 405, 2, 1),
('id4897', 407, 2, 0),
('id4897', 419, 2, 2),
('id4898', 78, 0, 2),
('id4898', 81, 0, 2),
('id4898', 102, 2, 2),
('id4898', 108, 0, 0),
('id4898', 114, 0, 2),
('id4898', 118, 2, 2),
('id4898', 291, 1, 1),
('id4898', 322, 2, 1),
('id4898', 380, 2, 1),
('id4898', 381, 0, 0),
('id4898', 382, 0, 2),
('id4898', 394, 1, 2),
('id4898', 395, 1, 1),
('id4898', 396, 0, 0),
('id4898', 397, 2, 2),
('id4898', 398, 0, 0),
('id4898', 405, 1, 1),
('id4898', 407, 2, 2),
('id4898', 419, 0, 2),
('id4899', 78, 2, 2),
('id4899', 81, 2, 2),
('id4899', 102, 0, 2),
('id4899', 108, 0, 1),
('id4899', 114, 2, 2),
('id4899', 118, 2, 1),
('id4899', 291, 0, 2),
('id4899', 322, 1, 1),
('id4899', 380, 2, 2),
('id4899', 381, 1, 2),
('id4899', 382, 0, 2),
('id4899', 394, 2, 2),
('id4899', 395, 0, 2),
('id4899', 396, 2, 2),
('id4899', 397, 2, 2),
('id4899', 398, 2, 2),
('id4899', 405, 0, 2),
('id4899', 407, 0, 0),
('id4899', 419, 1, 1),
('id4900', 78, 2, 1),
('id4900', 81, 1, 2),
('id4900', 102, 2, 0),
('id4900', 108, 2, 2),
('id4900', 114, 2, 2),
('id4900', 118, 0, 2),
('id4900', 291, 1, 2),
('id4900', 322, 1, 1),
('id4900', 380, 0, 2),
('id4900', 381, 1, 2),
('id4900', 382, 2, 0),
('id4900', 394, 0, 0),
('id4900', 395, 0, 2),
('id4900', 396, 0, 0),
('id4900', 397, 0, 2),
('id4900', 398, 2, 2),
('id4900', 405, 0, 2),
('id4900', 407, 2, 1),
('id4900', 419, 2, 1),
('id4901', 408, 2, 2),
('id4901', 409, 3, 2),
('id4901', 410, 3, 1),
('id4902', 411, 1, 3),
('id4902', 412, 0, 0),
('id4902', 413, 1, 3),
('id4902', 414, 0, 1),
('id4903', 411, 3, 0),
('id4903', 412, 3, 1),
('id4903', 413, 1, 3),
('id4903', 414, 3, 1),
('id4904', 411, 1, 2),
('id4904', 412, 2, 2),
('id4904', 413, 3, 1),
('id4904', 414, 3, 2),
('id4905', 408, 1, 0),
('id4905', 409, 1, 0),
('id4905', 410, 2, 0),
('id4906', 69, 3, 3),
('id4906', 73, 2, 3),
('id4906', 76, 3, 0),
('id4906', 77, 0, 0),
('id4906', 278, 3, 1),
('id4906', 389, 1, 0),
('id4906', 408, 3, 3),
('id4906', 409, 0, 2),
('id4906', 410, 1, 1),
('id4906', 415, 2, 3),
('id4906', 416, 0, 0),
('id4907', 69, 0, 0),
('id4907', 73, 1, 0),
('id4907', 76, 1, 2),
('id4907', 77, 0, 0),
('id4907', 278, 2, 1),
('id4907', 389, 3, 1),
('id4907', 415, 2, 3),
('id4907', 416, 0, 2),
('id4909', 375, 3, 2),
('id4909', 417, 1, 3),
('id4909', 418, 3, 1),
('id4910', 375, 0, 3),
('id4910', 417, 0, 0),
('id4910', 418, 3, 2),
('id4911', 78, 1, 2),
('id4911', 81, 0, 2),
('id4911', 102, 2, 2),
('id4911', 108, 2, 0),
('id4911', 114, 0, 1),
('id4911', 118, 0, 1),
('id4911', 291, 2, 2),
('id4911', 322, 2, 0),
('id4911', 380, 1, 2),
('id4911', 381, 2, 0),
('id4911', 382, 2, 1),
('id4911', 394, 2, 0),
('id4911', 395, 2, 0),
('id4911', 396, 2, 2),
('id4911', 397, 2, 2),
('id4911', 398, 0, 2),
('id4911', 405, 2, 2),
('id4911', 407, 2, 1),
('id4911', 419, 0, 2),
('id4912', 78, 1, 1),
('id4912', 81, 2, 2),
('id4912', 102, 2, 2),
('id4912', 108, 1, 2),
('id4912', 114, 2, 2),
('id4912', 118, 2, 2),
('id4912', 291, 1, 1),
('id4912', 322, 0, 0),
('id4912', 380, 0, 2),
('id4912', 381, 0, 2),
('id4912', 382, 0, 1),
('id4912', 394, 1, 0),
('id4912', 395, 2, 1),
('id4912', 396, 0, 2),
('id4912', 397, 1, 0),
('id4912', 398, 2, 0),
('id4912', 405, 1, 0),
('id4912', 407, 2, 1),
('id4912', 419, 2, 2),
('id4913', 78, 0, 2),
('id4913', 81, 1, 2),
('id4913', 102, 2, 2),
('id4913', 108, 2, 1),
('id4913', 114, 2, 2),
('id4913', 118, 2, 1),
('id4913', 291, 2, 2),
('id4913', 322, 2, 2),
('id4913', 380, 1, 2),
('id4913', 381, 0, 2),
('id4913', 382, 1, 1),
('id4913', 394, 0, 2),
('id4913', 395, 2, 0),
('id4913', 396, 2, 2),
('id4913', 397, 2, 1),
('id4913', 398, 2, 2),
('id4913', 405, 2, 0),
('id4913', 407, 0, 2),
('id4913', 419, 0, 2),
('id4914', 78, 2, 2),
('id4914', 81, 0, 1),
('id4914', 102, 1, 1),
('id4914', 108, 1, 1),
('id4914', 114, 2, 0),
('id4914', 118, 2, 0),
('id4914', 291, 2, 2),
('id4914', 322, 2, 1),
('id4914', 380, 2, 2),
('id4914', 381, 2, 2),
('id4914', 382, 1, 0),
('id4914', 394, 2, 2),
('id4914', 395, 2, 2),
('id4914', 396, 2, 0),
('id4914', 397, 2, 0),
('id4914', 398, 2, 2),
('id4914', 405, 1, 2),
('id4914', 407, 0, 0),
('id4914', 419, 2, 2),
('id4915', 78, 2, 2),
('id4915', 81, 2, 2),
('id4915', 102, 2, 1),
('id4915', 108, 1, 2),
('id4915', 114, 0, 2),
('id4915', 118, 1, 2),
('id4915', 291, 1, 2),
('id4915', 322, 2, 0),
('id4915', 380, 2, 2),
('id4915', 381, 2, 2),
('id4915', 382, 2, 2),
('id4915', 394, 2, 0),
('id4915', 395, 2, 2),
('id4915', 396, 1, 0),
('id4915', 397, 1, 0),
('id4915', 398, 2, 2),
('id4915', 405, 2, 2),
('id4915', 407, 1, 2),
('id4915', 419, 2, 1),
('id4916', 78, 1, 2),
('id4916', 81, 0, 2),
('id4916', 102, 1, 2),
('id4916', 108, 1, 2),
('id4916', 114, 2, 2),
('id4916', 118, 1, 0),
('id4916', 291, 1, 0),
('id4916', 322, 0, 2),
('id4916', 380, 2, 1),
('id4916', 381, 2, 2),
('id4916', 382, 1, 2),
('id4916', 394, 0, 2),
('id4916', 395, 1, 0),
('id4916', 396, 0, 0),
('id4916', 397, 2, 2),
('id4916', 398, 1, 0),
('id4916', 405, 0, 0),
('id4916', 407, 1, 0),
('id4916', 419, 0, 1),
('id4917', 69, 1, 1),
('id4917', 73, 2, 1),
('id4917', 76, 2, 1),
('id4917', 77, 2, 2),
('id4917', 278, 0, 1),
('id4917', 389, 1, 0),
('id4917', 415, 2, 2),
('id4917', 416, 1, 3),
('id4918', 69, 3, 2),
('id4918', 73, 1, 1),
('id4918', 76, 1, 0),
('id4918', 77, 2, 3),
('id4918', 278, 2, 0),
('id4918', 389, 1, 1),
('id4918', 415, 2, 2),
('id4918', 416, 2, 3),
('id4919', 69, 3, 1),
('id4919', 73, 2, 3),
('id4919', 76, 1, 2),
('id4919', 77, 1, 1),
('id4919', 278, 0, 1),
('id4919', 389, 0, 0),
('id4919', 415, 0, 3),
('id4919', 416, 0, 2),
('id4920', 69, 2, 0),
('id4920', 73, 2, 1),
('id4920', 76, 1, 1),
('id4920', 77, 3, 3),
('id4920', 278, 2, 0),
('id4920', 389, 3, 1),
('id4920', 415, 0, 0),
('id4920', 416, 3, 0),
('id4921', 69, 2, 1),
('id4921', 73, 1, 3),
('id4921', 76, 3, 0),
('id4921', 77, 3, 2),
('id4921', 278, 0, 1),
('id4921', 389, 2, 2),
('id4921', 415, 0, 2),
('id4921', 416, 1, 1),
('id4922', 69, 2, 2),
('id4922', 73, 2, 0),
('id4922', 76, 1, 3),
('id4922', 77, 2, 1),
('id4922', 278, 1, 3),
('id4922', 389, 3, 1),
('id4922', 415, 3, 3),
('id4922', 416, 1, 3),
('id4923', 408, 2, 2),
('id4923', 409, 1, 2),
('id4923', 410, 1, 1),
('id4924', 408, 0, 2),
('id4924', 409, 2, 2),
('id4924', 410, 3, 2),
('id4925', 408, 1, 2),
('id4925', 409, 0, 1),
('id4925', 410, 2, 3),
('id4926', 408, 3, 1),
('id4926', 409, 1, 1),
('id4926', 410, 1, 3),
('id4927', 408, 1, 2),
('id4927', 409, 1, 1),
('id4927', 410, 2, 1),
('id4928', 408, 2, 3),
('id4928', 409, 3, 2),
('id4928', 410, 2, 2),
('id4929', 408, 2, 2),
('id4929', 409, 0, 3),
('id4929', 410, 1, 0),
('id4930', 375, 1, 3),
('id4930', 417, 2, 1),
('id4930', 418, 1, 1),
('id4931', 375, 1, 1),
('id4931', 417, 0, 3),
('id4931', 418, 0, 3),
('id4932', 375, 2, 0),
('id4932', 417, 1, 1),
('id4932', 418, 3, 3),
('id4933', 375, 1, 1),
('id4933', 417, 3, 3),
('id4933', 418, 0, 3),
('id4934', 375, 0, 3),
('id4934', 417, 3, 2),
('id4934', 418, 0, 0),
('id4935', 375, 2, 1),
('id4935', 417, 3, 1),
('id4935', 418, 0, 0),
('id4936', 375, 2, 2),
('id4936', 417, 1, 1),
('id4936', 418, 3, 0),
('id4937', 375, 1, 1),
('id4937', 417, 2, 3),
('id4937', 418, 3, 3),
('id4938', 411, 3, 3),
('id4938', 412, 2, 3),
('id4938', 413, 0, 1),
('id4938', 414, 1, 0),
('id4939', 411, 3, 0),
('id4939', 412, 0, 3),
('id4939', 413, 3, 3),
('id4939', 414, 3, 1),
('id4940', 411, 0, 2),
('id4940', 412, 2, 3),
('id4940', 413, 0, 0),
('id4940', 414, 0, 1),
('id4941', 411, 0, 0),
('id4941', 412, 1, 0),
('id4941', 413, 0, 1),
('id4941', 414, 0, 1),
('id4942', 411, 2, 3),
('id4942', 412, 3, 2),
('id4942', 413, 2, 0),
('id4942', 414, 0, 0),
('id4943', 411, 0, 1),
('id4943', 412, 1, 3),
('id4943', 413, 2, 2),
('id4943', 414, 1, 2),
('id4944', 78, 1, 1),
('id4944', 81, 2, 3),
('id4944', 102, 2, 1),
('id4944', 108, 0, 0),
('id4944', 114, 0, 0),
('id4944', 118, 2, 0),
('id4944', 291, 0, 0),
('id4944', 322, 3, 2),
('id4944', 380, 1, 2),
('id4944', 381, 2, 3),
('id4944', 382, 2, 2),
('id4944', 394, 1, 0),
('id4944', 395, 0, 1),
('id4944', 396, 0, 3),
('id4944', 397, 1, 0),
('id4944', 398, 1, 2),
('id4944', 405, 2, 0),
('id4944', 407, 3, 0),
('id4944', 419, 2, 0),
('id4945', 78, 1, 0),
('id4945', 81, 2, 1),
('id4945', 102, 1, 3),
('id4945', 108, 0, 1),
('id4945', 114, 3, 2),
('id4945', 118, 1, 3),
('id4945', 291, 0, 2),
('id4945', 322, 1, 1),
('id4945', 380, 1, 2),
('id4945', 381, 3, 0),
('id4945', 382, 2, 0),
('id4945', 394, 0, 1),
('id4945', 395, 1, 1),
('id4945', 396, 0, 3),
('id4945', 397, 1, 2),
('id4945', 398, 1, 3),
('id4945', 405, 3, 0),
('id4945', 407, 1, 1),
('id4945', 419, 3, 2),
('id4946', 78, 2, 2),
('id4946', 81, 1, 1),
('id4946', 102, 0, 0),
('id4946', 108, 2, 1),
('id4946', 114, 1, 2),
('id4946', 118, 0, 2),
('id4946', 291, 2, 0),
('id4946', 322, 2, 1),
('id4946', 380, 2, 3),
('id4946', 381, 1, 2),
('id4946', 382, 3, 0),
('id4946', 394, 1, 0),
('id4946', 395, 2, 0),
('id4946', 396, 3, 3),
('id4946', 397, 2, 1),
('id4946', 398, 3, 3),
('id4946', 405, 0, 0),
('id4946', 407, 3, 2),
('id4946', 419, 0, 0),
('id4947', 78, 0, 1),
('id4947', 81, 2, 1),
('id4947', 102, 3, 3),
('id4947', 108, 3, 0),
('id4947', 114, 2, 3),
('id4947', 118, 3, 3),
('id4947', 291, 1, 1),
('id4947', 322, 2, 3),
('id4947', 380, 3, 0),
('id4947', 381, 0, 3),
('id4947', 382, 2, 1),
('id4947', 394, 2, 0),
('id4947', 395, 0, 3),
('id4947', 396, 0, 3),
('id4947', 397, 1, 0),
('id4947', 398, 0, 3),
('id4947', 405, 1, 3),
('id4947', 407, 3, 2),
('id4947', 419, 3, 0),
('id4948', 78, 1, 2),
('id4948', 81, 3, 3),
('id4948', 102, 2, 1),
('id4948', 108, 2, 3),
('id4948', 114, 0, 0),
('id4948', 118, 3, 3),
('id4948', 291, 1, 3),
('id4948', 322, 2, 2),
('id4948', 380, 0, 3),
('id4948', 381, 3, 3),
('id4948', 382, 1, 0),
('id4948', 394, 2, 3),
('id4948', 395, 2, 2),
('id4948', 396, 0, 3),
('id4948', 397, 2, 2),
('id4948', 398, 3, 0),
('id4948', 405, 0, 0),
('id4948', 407, 1, 0),
('id4948', 419, 2, 1),
('id4949', 78, 0, 3),
('id4949', 81, 2, 3),
('id4949', 102, 2, 0),
('id4949', 108, 0, 1),
('id4949', 114, 2, 1),
('id4949', 118, 1, 3),
('id4949', 291, 1, 3),
('id4949', 322, 0, 0),
('id4949', 380, 2, 0),
('id4949', 381, 2, 0),
('id4949', 382, 1, 1),
('id4949', 394, 2, 3),
('id4949', 395, 3, 3),
('id4949', 396, 2, 0),
('id4949', 397, 0, 3),
('id4949', 398, 2, 0),
('id4949', 405, 1, 3),
('id4949', 407, 3, 3),
('id4949', 419, 3, 1),
('id4950', 69, 2, 0),
('id4950', 73, 1, 3),
('id4950', 76, 0, 3),
('id4950', 77, 2, 2),
('id4950', 278, 2, 3),
('id4950', 389, 1, 1),
('id4950', 415, 1, 2),
('id4950', 416, 3, 0),
('id4951', 69, 2, 0),
('id4951', 73, 1, 3),
('id4951', 76, 3, 0),
('id4951', 77, 2, 0),
('id4951', 278, 1, 3),
('id4951', 389, 2, 0),
('id4951', 415, 2, 2),
('id4951', 416, 3, 0),
('id4952', 69, 2, 1),
('id4952', 73, 2, 3),
('id4952', 76, 1, 0),
('id4952', 77, 0, 1),
('id4952', 278, 2, 1),
('id4952', 389, 2, 1),
('id4952', 415, 1, 0),
('id4952', 416, 0, 3),
('id4953', 69, 2, 1),
('id4953', 73, 2, 1),
('id4953', 76, 1, 2),
('id4953', 77, 2, 1),
('id4953', 278, 1, 0),
('id4953', 389, 2, 1),
('id4953', 415, 0, 3),
('id4953', 416, 0, 3),
('id4954', 69, 0, 2),
('id4954', 73, 1, 3),
('id4954', 76, 2, 1),
('id4954', 77, 2, 3),
('id4954', 278, 1, 1),
('id4954', 389, 0, 1),
('id4954', 415, 1, 2),
('id4954', 416, 1, 3),
('id4955', 69, 2, 3),
('id4955', 73, 2, 2),
('id4955', 76, 3, 2),
('id4955', 77, 1, 2),
('id4955', 278, 1, 0),
('id4955', 389, 2, 3),
('id4955', 415, 1, 0),
('id4955', 416, 1, 0),
('id4956', 408, 0, 3),
('id4956', 409, 3, 3),
('id4956', 410, 2, 1),
('id4957', 408, 0, 1),
('id4957', 409, 0, 1),
('id4957', 410, 0, 0),
('id4958', 408, 2, 3),
('id4958', 409, 0, 2),
('id4958', 410, 0, 0),
('id4959', 408, 2, 2),
('id4959', 409, 2, 2),
('id4959', 410, 3, 3),
('id4960', 408, 1, 2),
('id4960', 409, 0, 3),
('id4960', 410, 0, 1),
('id4961', 408, 0, 2),
('id4961', 409, 3, 2),
('id4961', 410, 3, 3),
('id4962', 408, 3, 0),
('id4962', 409, 1, 0),
('id4962', 410, 0, 2),
('id4963', 375, 1, 1),
('id4963', 417, 3, 3),
('id4963', 418, 3, 0),
('id4964', 375, 2, 3),
('id4964', 417, 3, 0),
('id4964', 418, 0, 0),
('id4965', 375, 2, 0),
('id4965', 417, 3, 3),
('id4965', 418, 1, 3),
('id4966', 375, 2, 0),
('id4966', 417, 0, 1),
('id4966', 418, 0, 0),
('id4967', 375, 2, 1),
('id4967', 417, 0, 2),
('id4967', 418, 1, 3),
('id4968', 375, 1, 0),
('id4968', 417, 3, 0),
('id4968', 418, 0, 3),
('id4969', 375, 1, 3),
('id4969', 417, 1, 3),
('id4969', 418, 1, 1),
('id4970', 375, 3, 0),
('id4970', 417, 0, 0),
('id4970', 418, 2, 1),
('id4971', 411, 1, 1),
('id4971', 412, 1, 1),
('id4971', 413, 1, 3),
('id4971', 414, 2, 0),
('id4972', 411, 3, 0),
('id4972', 412, 3, 1),
('id4972', 413, 0, 1),
('id4972', 414, 3, 2),
('id4973', 411, 1, 2),
('id4973', 412, 2, 2),
('id4973', 413, 2, 1),
('id4973', 414, 2, 0),
('id4974', 411, 3, 2),
('id4974', 412, 0, 2),
('id4974', 413, 0, 0),
('id4974', 414, 0, 3),
('id4975', 411, 3, 0),
('id4975', 412, 1, 0),
('id4975', 413, 3, 2),
('id4975', 414, 1, 0),
('id4976', 411, 3, 3),
('id4976', 412, 0, 2),
('id4976', 413, 1, 0),
('id4976', 414, 3, 3),
('id4977', 78, 2, 0),
('id4977', 81, 2, 3),
('id4977', 102, 1, 1),
('id4977', 108, 2, 2),
('id4977', 114, 3, 0),
('id4977', 118, 0, 2),
('id4977', 291, 1, 2),
('id4977', 322, 0, 3),
('id4977', 380, 3, 3),
('id4977', 381, 2, 0),
('id4977', 382, 2, 1),
('id4977', 394, 0, 2),
('id4977', 395, 2, 2),
('id4977', 396, 2, 3),
('id4977', 397, 1, 3),
('id4977', 398, 0, 2),
('id4977', 405, 2, 0),
('id4977', 407, 0, 3),
('id4977', 419, 0, 2),
('id4978', 78, 2, 0),
('id4978', 81, 0, 1),
('id4978', 102, 1, 0),
('id4978', 108, 0, 1),
('id4978', 114, 3, 2),
('id4978', 118, 0, 1),
('id4978', 291, 1, 0),
('id4978', 322, 3, 0),
('id4978', 380, 2, 1),
('id4978', 381, 0, 2),
('id4978', 382, 3, 2),
('id4978', 394, 1, 2),
('id4978', 395, 3, 0),
('id4978', 396, 3, 3),
('id4978', 397, 2, 3),
('id4978', 398, 3, 1),
('id4978', 405, 0, 0),
('id4978', 407, 0, 2),
('id4978', 419, 1, 1),
('id4979', 78, 2, 2),
('id4979', 81, 1, 1),
('id4979', 102, 2, 3),
('id4979', 108, 3, 3),
('id4979', 114, 3, 1),
('id4979', 118, 1, 1),
('id4979', 291, 3, 1),
('id4979', 322, 2, 3),
('id4979', 380, 0, 1),
('id4979', 381, 2, 3),
('id4979', 382, 2, 1),
('id4979', 394, 2, 1),
('id4979', 395, 2, 3),
('id4979', 396, 3, 0),
('id4979', 397, 1, 1),
('id4979', 398, 0, 0),
('id4979', 405, 0, 2),
('id4979', 407, 2, 0),
('id4979', 419, 1, 0),
('id4980', 78, 1, 3),
('id4980', 81, 0, 0),
('id4980', 102, 2, 3),
('id4980', 108, 1, 0),
('id4980', 114, 3, 3),
('id4980', 118, 2, 0),
('id4980', 291, 0, 3),
('id4980', 322, 0, 0),
('id4980', 380, 2, 0),
('id4980', 381, 3, 0),
('id4980', 382, 0, 3),
('id4980', 394, 1, 0),
('id4980', 395, 3, 1),
('id4980', 396, 0, 0),
('id4980', 397, 3, 1),
('id4980', 398, 3, 1),
('id4980', 405, 3, 0),
('id4980', 407, 2, 2),
('id4980', 419, 1, 1),
('id4981', 78, 2, 0),
('id4981', 81, 3, 0),
('id4981', 102, 0, 0),
('id4981', 108, 2, 1),
('id4981', 114, 0, 1),
('id4981', 118, 0, 0),
('id4981', 291, 0, 1),
('id4981', 322, 1, 0),
('id4981', 380, 3, 0),
('id4981', 381, 2, 2),
('id4981', 382, 3, 0),
('id4981', 394, 1, 2),
('id4981', 395, 0, 3),
('id4981', 396, 3, 0),
('id4981', 397, 1, 2),
('id4981', 398, 0, 2),
('id4981', 405, 0, 3),
('id4981', 407, 1, 3),
('id4981', 419, 0, 3),
('id4982', 78, 2, 0),
('id4982', 81, 1, 1),
('id4982', 102, 1, 0),
('id4982', 108, 1, 2),
('id4982', 114, 0, 1),
('id4982', 118, 0, 2),
('id4982', 291, 1, 0),
('id4982', 322, 1, 0),
('id4982', 380, 0, 1),
('id4982', 381, 2, 1),
('id4982', 382, 3, 3),
('id4982', 394, 1, 0),
('id4982', 395, 0, 0),
('id4982', 396, 0, 1),
('id4982', 397, 0, 0),
('id4982', 398, 3, 2),
('id4982', 405, 0, 1),
('id4982', 407, 2, 0),
('id4982', 419, 3, 1),
('id4983', 69, 0, 1),
('id4983', 73, 2, 1),
('id4983', 76, 2, 2),
('id4983', 77, 1, 2),
('id4983', 278, 2, 2),
('id4983', 389, 0, 2),
('id4983', 415, 0, 2),
('id4983', 416, 1, 0),
('id4984', 69, 0, 3),
('id4984', 73, 1, 1),
('id4984', 76, 1, 1),
('id4984', 77, 2, 0),
('id4984', 278, 1, 2),
('id4984', 389, 2, 2),
('id4984', 415, 2, 2),
('id4984', 416, 1, 2),
('id4985', 69, 3, 0),
('id4985', 73, 1, 3),
('id4985', 76, 2, 2),
('id4985', 77, 1, 2),
('id4985', 278, 0, 2),
('id4985', 389, 2, 2),
('id4985', 415, 0, 0),
('id4985', 416, 0, 1),
('id4986', 69, 1, 2),
('id4986', 73, 0, 0),
('id4986', 76, 1, 0),
('id4986', 77, 0, 2),
('id4986', 278, 2, 0),
('id4986', 389, 2, 2),
('id4986', 415, 0, 0),
('id4986', 416, 0, 2),
('id4987', 69, 1, 1),
('id4987', 73, 0, 2),
('id4987', 76, 0, 1),
('id4987', 77, 2, 0),
('id4987', 278, 2, 0),
('id4987', 389, 2, 2),
('id4987', 415, 2, 1),
('id4987', 416, 2, 2),
('id4988', 69, 0, 1),
('id4988', 73, 3, 3),
('id4988', 76, 2, 2),
('id4988', 77, 2, 1),
('id4988', 278, 2, 2),
('id4988', 389, 2, 2),
('id4988', 415, 1, 2),
('id4988', 416, 1, 0),
('id4989', 408, 0, 2),
('id4989', 409, 2, 1),
('id4989', 410, 0, 0),
('id4990', 408, 0, 2),
('id4990', 409, 1, 0),
('id4990', 410, 2, 0),
('id4991', 408, 2, 2),
('id4991', 409, 2, 0),
('id4991', 410, 2, 0),
('id4992', 408, 1, 0),
('id4992', 409, 2, 0),
('id4992', 410, 1, 2),
('id4993', 408, 2, 0),
('id4993', 409, 1, 0),
('id4993', 410, 0, 2),
('id4994', 408, 0, 2),
('id4994', 409, 2, 2),
('id4994', 410, 2, 1),
('id4995', 408, 0, 1),
('id4995', 409, 2, 1),
('id4995', 410, 2, 1),
('id4996', 375, 2, 0),
('id4996', 417, 0, 1),
('id4996', 418, 0, 0),
('id4997', 375, 1, 0),
('id4997', 417, 2, 1),
('id4997', 418, 2, 2),
('id4998', 375, 1, 0),
('id4998', 417, 2, 2),
('id4998', 418, 1, 2),
('id4999', 375, 2, 2),
('id4999', 417, 2, 2),
('id4999', 418, 1, 1),
('id5000', 375, 1, 1),
('id5000', 417, 1, 2),
('id5000', 418, 2, 1),
('id5001', 375, 2, 2),
('id5001', 417, 2, 2),
('id5001', 418, 0, 2),
('id5002', 375, 0, 2),
('id5002', 417, 2, 0),
('id5002', 418, 2, 0),
('id5003', 375, 1, 2),
('id5003', 417, 0, 2),
('id5003', 418, 2, 1),
('id5004', 411, 2, 2),
('id5004', 412, 1, 1),
('id5004', 413, 0, 1),
('id5004', 414, 1, 2),
('id5005', 411, 2, 2),
('id5005', 412, 2, 0),
('id5005', 413, 2, 2),
('id5005', 414, 2, 2),
('id5006', 411, 0, 1),
('id5006', 412, 2, 1),
('id5006', 413, 2, 2),
('id5006', 414, 2, 1),
('id5007', 411, 1, 0),
('id5007', 412, 2, 2),
('id5007', 413, 2, 1),
('id5007', 414, 2, 0),
('id5008', 411, 1, 2),
('id5008', 412, 1, 2),
('id5008', 413, 2, 2),
('id5008', 414, 2, 2),
('id5009', 411, 2, 2),
('id5009', 412, 0, 2),
('id5009', 413, 1, 1),
('id5009', 414, 2, 1),
('id5010', 78, 0, 0),
('id5010', 81, 1, 0),
('id5010', 102, 2, 3),
('id5010', 108, 1, 2),
('id5010', 114, 2, 0),
('id5010', 118, 1, 0),
('id5010', 291, 3, 2),
('id5010', 322, 2, 1),
('id5010', 380, 1, 3),
('id5010', 381, 2, 0),
('id5010', 382, 1, 3),
('id5010', 394, 3, 2),
('id5010', 395, 3, 0),
('id5010', 396, 0, 3),
('id5010', 397, 1, 2),
('id5010', 398, 0, 3),
('id5010', 405, 0, 0),
('id5010', 407, 0, 0),
('id5010', 419, 3, 0),
('id5011', 78, 1, 1),
('id5011', 81, 1, 2),
('id5011', 102, 0, 0),
('id5011', 108, 2, 2),
('id5011', 114, 1, 2),
('id5011', 118, 2, 1),
('id5011', 291, 1, 2),
('id5011', 322, 1, 0),
('id5011', 380, 3, 0),
('id5011', 381, 2, 3),
('id5011', 382, 3, 0),
('id5011', 394, 1, 3),
('id5011', 395, 1, 0),
('id5011', 396, 3, 1),
('id5011', 397, 1, 1),
('id5011', 398, 0, 2),
('id5011', 405, 2, 2),
('id5011', 407, 2, 1),
('id5011', 419, 0, 0),
('id5012', 78, 1, 1),
('id5012', 81, 2, 0),
('id5012', 102, 1, 3),
('id5012', 108, 2, 1),
('id5012', 114, 3, 2),
('id5012', 118, 3, 0),
('id5012', 291, 2, 1),
('id5012', 322, 2, 3),
('id5012', 380, 2, 3),
('id5012', 381, 3, 1),
('id5012', 382, 1, 0),
('id5012', 394, 3, 3),
('id5012', 395, 0, 1),
('id5012', 396, 3, 2),
('id5012', 397, 3, 3),
('id5012', 398, 1, 0),
('id5012', 405, 1, 3),
('id5012', 407, 2, 2),
('id5012', 419, 1, 0),
('id5013', 78, 1, 1),
('id5013', 81, 0, 1),
('id5013', 102, 1, 0),
('id5013', 108, 2, 2),
('id5013', 114, 0, 1),
('id5013', 118, 2, 3),
('id5013', 291, 2, 1),
('id5013', 322, 3, 2),
('id5013', 380, 3, 1),
('id5013', 381, 0, 3),
('id5013', 382, 0, 1),
('id5013', 394, 1, 3),
('id5013', 395, 0, 3),
('id5013', 396, 2, 1),
('id5013', 397, 3, 0),
('id5013', 398, 1, 3),
('id5013', 405, 2, 0),
('id5013', 407, 2, 3),
('id5013', 419, 0, 2),
('id5014', 78, 1, 2),
('id5014', 81, 2, 3),
('id5014', 102, 3, 2),
('id5014', 108, 2, 0),
('id5014', 114, 2, 1),
('id5014', 118, 3, 2),
('id5014', 291, 0, 0),
('id5014', 322, 1, 3),
('id5014', 380, 2, 1),
('id5014', 381, 2, 0),
('id5014', 382, 2, 3),
('id5014', 394, 3, 2),
('id5014', 395, 3, 3),
('id5014', 396, 1, 1),
('id5014', 397, 0, 0),
('id5014', 398, 2, 2),
('id5014', 405, 0, 1),
('id5014', 407, 2, 0),
('id5014', 419, 3, 3),
('id5015', 78, 1, 0),
('id5015', 81, 2, 2),
('id5015', 102, 1, 0),
('id5015', 108, 1, 0),
('id5015', 114, 3, 2),
('id5015', 118, 2, 1),
('id5015', 291, 3, 1),
('id5015', 322, 0, 2),
('id5015', 380, 3, 0),
('id5015', 381, 3, 3),
('id5015', 382, 1, 0),
('id5015', 394, 2, 2),
('id5015', 395, 1, 0),
('id5015', 396, 2, 1),
('id5015', 397, 2, 1),
('id5015', 398, 0, 2),
('id5015', 405, 0, 0),
('id5015', 407, 1, 0),
('id5015', 419, 0, 1),
('id5016', 69, 2, 1),
('id5016', 73, 0, 1),
('id5016', 76, 0, 1),
('id5016', 77, 2, 2),
('id5016', 278, 2, 0),
('id5016', 389, 0, 0),
('id5016', 415, 1, 2),
('id5016', 416, 0, 2),
('id5017', 69, 1, 0),
('id5017', 73, 0, 2),
('id5017', 76, 2, 1),
('id5017', 77, 0, 2),
('id5017', 278, 1, 2),
('id5017', 389, 1, 0),
('id5017', 415, 2, 0),
('id5017', 416, 2, 2),
('id5018', 69, 2, 2),
('id5018', 73, 1, 0),
('id5018', 76, 1, 2),
('id5018', 77, 0, 0),
('id5018', 278, 0, 2),
('id5018', 389, 2, 2),
('id5018', 415, 2, 2),
('id5018', 416, 2, 0),
('id5019', 69, 2, 2),
('id5019', 73, 1, 1),
('id5019', 76, 2, 2),
('id5019', 77, 2, 2),
('id5019', 278, 1, 2),
('id5019', 389, 0, 0),
('id5019', 415, 1, 2),
('id5019', 416, 0, 2),
('id5020', 69, 2, 1),
('id5020', 73, 1, 1),
('id5020', 76, 2, 1),
('id5020', 77, 1, 1),
('id5020', 278, 2, 2),
('id5020', 389, 0, 1),
('id5020', 415, 2, 2),
('id5020', 416, 1, 1),
('id5021', 69, 0, 0),
('id5021', 73, 0, 1),
('id5021', 76, 2, 1),
('id5021', 77, 2, 2),
('id5021', 278, 0, 2),
('id5021', 389, 1, 2),
('id5021', 415, 2, 1),
('id5021', 416, 1, 1),
('id5022', 408, 2, 2),
('id5022', 409, 2, 2),
('id5022', 410, 0, 2),
('id5023', 408, 1, 1),
('id5023', 409, 2, 2),
('id5023', 410, 1, 2),
('id5024', 408, 0, 2),
('id5024', 409, 0, 2),
('id5024', 410, 2, 0),
('id5025', 408, 2, 2),
('id5025', 409, 2, 2),
('id5025', 410, 2, 0),
('id5026', 408, 2, 2),
('id5026', 409, 2, 2),
('id5026', 410, 1, 2),
('id5027', 408, 2, 2),
('id5027', 409, 1, 2),
('id5027', 410, 2, 0),
('id5028', 408, 1, 2),
('id5028', 409, 1, 0),
('id5028', 410, 1, 2),
('id5029', 375, 0, 2),
('id5029', 417, 0, 1),
('id5029', 418, 2, 2),
('id5030', 375, 2, 1),
('id5030', 417, 1, 1),
('id5030', 418, 2, 2),
('id5031', 375, 2, 2),
('id5031', 417, 2, 2),
('id5031', 418, 1, 2),
('id5032', 375, 0, 2),
('id5032', 417, 2, 0),
('id5032', 418, 1, 2),
('id5033', 375, 2, 0),
('id5033', 417, 2, 2),
('id5033', 418, 2, 2),
('id5034', 375, 2, 2),
('id5034', 417, 0, 1),
('id5034', 418, 2, 2),
('id5035', 375, 2, 2),
('id5035', 417, 1, 2),
('id5035', 418, 1, 0),
('id5036', 375, 0, 2),
('id5036', 417, 0, 0),
('id5036', 418, 2, 1),
('id5037', 411, 2, 0),
('id5037', 412, 2, 0),
('id5037', 413, 2, 2),
('id5037', 414, 2, 2),
('id5038', 411, 2, 1),
('id5038', 412, 1, 2),
('id5038', 413, 1, 0),
('id5038', 414, 0, 2),
('id5039', 411, 0, 2),
('id5039', 412, 2, 2),
('id5039', 413, 2, 0),
('id5039', 414, 2, 1),
('id5040', 411, 2, 0),
('id5040', 412, 2, 0),
('id5040', 413, 1, 0),
('id5040', 414, 2, 2),
('id5041', 411, 2, 2),
('id5041', 412, 2, 0),
('id5041', 413, 1, 1),
('id5041', 414, 2, 2),
('id5042', 411, 2, 2),
('id5042', 412, 1, 0),
('id5042', 413, 0, 1),
('id5042', 414, 2, 2),
('id5043', 78, 2, 2),
('id5043', 81, 0, 2),
('id5043', 102, 1, 2),
('id5043', 108, 2, 2),
('id5043', 114, 2, 2),
('id5043', 118, 2, 1),
('id5043', 291, 2, 2),
('id5043', 322, 1, 0),
('id5043', 380, 1, 2),
('id5043', 381, 2, 0),
('id5043', 382, 2, 1),
('id5043', 394, 2, 0),
('id5043', 395, 2, 2),
('id5043', 396, 0, 2),
('id5043', 397, 0, 2),
('id5043', 398, 1, 1),
('id5043', 405, 1, 0),
('id5043', 407, 1, 1),
('id5043', 419, 1, 0),
('id5044', 78, 2, 0),
('id5044', 81, 1, 2),
('id5044', 102, 0, 2),
('id5044', 108, 0, 2),
('id5044', 114, 0, 2),
('id5044', 118, 1, 2),
('id5044', 291, 1, 1),
('id5044', 322, 2, 2),
('id5044', 380, 0, 2),
('id5044', 381, 2, 0),
('id5044', 382, 2, 2),
('id5044', 394, 2, 2),
('id5044', 395, 2, 2),
('id5044', 396, 2, 2),
('id5044', 397, 0, 2),
('id5044', 398, 2, 0),
('id5044', 405, 0, 0),
('id5044', 407, 1, 2),
('id5044', 419, 2, 2),
('id5045', 78, 2, 2),
('id5045', 81, 1, 0),
('id5045', 102, 0, 0),
('id5045', 108, 0, 2),
('id5045', 114, 2, 1),
('id5045', 118, 1, 2),
('id5045', 291, 2, 2),
('id5045', 322, 1, 1),
('id5045', 380, 2, 2),
('id5045', 381, 2, 2),
('id5045', 382, 2, 2),
('id5045', 394, 0, 0),
('id5045', 395, 1, 1),
('id5045', 396, 2, 2),
('id5045', 397, 2, 1),
('id5045', 398, 2, 2),
('id5045', 405, 1, 2),
('id5045', 407, 2, 2),
('id5045', 419, 2, 1),
('id5046', 78, 2, 2),
('id5046', 81, 2, 1),
('id5046', 102, 1, 0),
('id5046', 108, 2, 0),
('id5046', 114, 2, 2),
('id5046', 118, 1, 1),
('id5046', 291, 2, 2),
('id5046', 322, 2, 1),
('id5046', 380, 0, 2),
('id5046', 381, 0, 2),
('id5046', 382, 2, 1),
('id5046', 394, 1, 0),
('id5046', 395, 0, 0),
('id5046', 396, 0, 2),
('id5046', 397, 2, 2),
('id5046', 398, 2, 2),
('id5046', 405, 1, 1),
('id5046', 407, 1, 1),
('id5046', 419, 2, 1),
('id5047', 78, 1, 2),
('id5047', 81, 2, 0),
('id5047', 102, 2, 2),
('id5047', 108, 1, 0),
('id5047', 114, 2, 2),
('id5047', 118, 0, 2),
('id5047', 291, 2, 0),
('id5047', 322, 0, 1),
('id5047', 380, 2, 1),
('id5047', 381, 1, 2),
('id5047', 382, 2, 1),
('id5047', 394, 0, 2),
('id5047', 395, 2, 1),
('id5047', 396, 1, 1),
('id5047', 397, 2, 0),
('id5047', 398, 2, 0),
('id5047', 405, 2, 2),
('id5047', 407, 0, 1),
('id5047', 419, 1, 2),
('id5048', 78, 1, 2),
('id5048', 81, 0, 2),
('id5048', 102, 0, 1),
('id5048', 108, 2, 2),
('id5048', 114, 2, 2),
('id5048', 118, 1, 2),
('id5048', 291, 0, 1),
('id5048', 322, 1, 1),
('id5048', 380, 1, 2),
('id5048', 381, 2, 2),
('id5048', 382, 2, 2),
('id5048', 394, 0, 2),
('id5048', 395, 0, 1),
('id5048', 396, 2, 0),
('id5048', 397, 1, 1),
('id5048', 398, 2, 2),
('id5048', 405, 2, 2),
('id5048', 407, 0, 1),
('id5048', 419, 2, 2),
('id5049', 69, 2, 0),
('id5049', 73, 2, 0),
('id5049', 76, 2, 1),
('id5049', 77, 2, 1),
('id5049', 278, 0, 2),
('id5049', 389, 2, 2),
('id5049', 415, 0, 1),
('id5049', 416, 2, 2),
('id5050', 69, 1, 0),
('id5050', 73, 2, 2),
('id5050', 76, 2, 2),
('id5050', 77, 2, 2),
('id5050', 278, 0, 1),
('id5050', 389, 2, 0),
('id5050', 415, 2, 2),
('id5050', 416, 0, 2),
('id5051', 69, 2, 2),
('id5051', 73, 2, 2),
('id5051', 76, 2, 2),
('id5051', 77, 2, 2),
('id5051', 278, 2, 0),
('id5051', 389, 0, 2),
('id5051', 415, 2, 2),
('id5051', 416, 2, 2),
('id5052', 69, 2, 2),
('id5052', 73, 2, 2),
('id5052', 76, 0, 1),
('id5052', 77, 1, 2),
('id5052', 278, 2, 1),
('id5052', 389, 1, 2),
('id5052', 415, 0, 1),
('id5052', 416, 0, 0),
('id5053', 69, 2, 1),
('id5053', 73, 1, 0),
('id5053', 76, 1, 2),
('id5053', 77, 2, 1),
('id5053', 278, 0, 2),
('id5053', 389, 2, 1),
('id5053', 415, 0, 0),
('id5053', 416, 2, 1),
('id5054', 69, 2, 0),
('id5054', 73, 0, 2),
('id5054', 76, 2, 2),
('id5054', 77, 2, 2),
('id5054', 278, 0, 2),
('id5054', 389, 2, 1),
('id5054', 415, 1, 2),
('id5054', 416, 1, 1),
('id5055', 408, 2, 2),
('id5055', 409, 2, 2),
('id5055', 410, 2, 1),
('id5056', 408, 2, 0),
('id5056', 409, 1, 2),
('id5056', 410, 2, 1),
('id5057', 408, 1, 2),
('id5057', 409, 2, 1),
('id5057', 410, 2, 2),
('id5058', 408, 0, 2),
('id5058', 409, 2, 2),
('id5058', 410, 2, 1),
('id5059', 408, 1, 1),
('id5059', 409, 2, 2),
('id5059', 410, 0, 2),
('id5060', 408, 2, 0),
('id5060', 409, 1, 2),
('id5060', 410, 2, 2),
('id5061', 408, 2, 2),
('id5061', 409, 2, 2),
('id5061', 410, 1, 1),
('id5062', 375, 2, 2),
('id5062', 417, 0, 1),
('id5062', 418, 0, 1),
('id5063', 375, 2, 2),
('id5063', 417, 2, 0),
('id5063', 418, 2, 0),
('id5064', 375, 0, 2),
('id5064', 417, 2, 0),
('id5064', 418, 1, 2),
('id5065', 375, 1, 2),
('id5065', 417, 2, 2),
('id5065', 418, 2, 1),
('id5066', 375, 2, 1),
('id5066', 417, 1, 2),
('id5066', 418, 0, 0),
('id5067', 375, 1, 2),
('id5067', 417, 1, 1),
('id5067', 418, 2, 0),
('id5068', 375, 1, 1),
('id5068', 417, 2, 1),
('id5068', 418, 1, 1),
('id5069', 375, 0, 2),
('id5069', 417, 0, 2),
('id5069', 418, 1, 0),
('id5070', 411, 0, 1),
('id5070', 412, 2, 2),
('id5070', 413, 0, 1),
('id5070', 414, 1, 2),
('id5071', 411, 2, 1),
('id5071', 412, 1, 0),
('id5071', 413, 0, 2),
('id5071', 414, 2, 1),
('id5072', 411, 2, 2),
('id5072', 412, 1, 2),
('id5072', 413, 2, 2),
('id5072', 414, 2, 0),
('id5073', 411, 0, 2),
('id5073', 412, 2, 2),
('id5073', 413, 2, 1),
('id5073', 414, 2, 2),
('id5074', 411, 2, 2),
('id5074', 412, 2, 1),
('id5074', 413, 2, 2),
('id5074', 414, 0, 0),
('id5075', 411, 0, 2),
('id5075', 412, 2, 2),
('id5075', 413, 1, 1),
('id5075', 414, 0, 0);

-- --------------------------------------------------------

--
-- Table structure for table `group`
--

CREATE TABLE IF NOT EXISTS `group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=30 ;

--
-- Dumping data for table `group`
--

INSERT INTO `group` (`id`, `name`) VALUES
(27, 'Project: FCA DT'),
(28, 'Team: GDL SW'),
(29, 'My Group');

-- --------------------------------------------------------

--
-- Table structure for table `group_has_employee`
--

CREATE TABLE IF NOT EXISTS `group_has_employee` (
  `group_id` int(11) NOT NULL,
  `employee_coreID` char(6) NOT NULL,
  PRIMARY KEY (`group_id`,`employee_coreID`),
  KEY `employee_coreID` (`employee_coreID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `group_has_employee`
--

INSERT INTO `group_has_employee` (`group_id`, `employee_coreID`) VALUES
(28, 'id4888'),
(29, 'id4888'),
(27, 'id4889'),
(27, 'id4890'),
(28, 'id4890'),
(27, 'id4891'),
(28, 'id4891'),
(27, 'id4892'),
(28, 'id4892'),
(27, 'id4893'),
(28, 'id4893'),
(27, 'id4894'),
(28, 'id4894'),
(28, 'id4900'),
(27, 'id4903'),
(27, 'id4904'),
(27, 'id4905'),
(29, 'id4905'),
(27, 'id4906'),
(29, 'id4906'),
(27, 'id4907'),
(27, 'id4908'),
(27, 'id4909'),
(27, 'id4910'),
(29, 'id4910'),
(27, 'id4919'),
(27, 'id4920'),
(27, 'id4988');

-- --------------------------------------------------------

--
-- Table structure for table `group_has_skill`
--

CREATE TABLE IF NOT EXISTS `group_has_skill` (
  `group_id` int(11) NOT NULL,
  `skill_idskill` int(11) NOT NULL,
  `importance` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`group_id`,`skill_idskill`),
  KEY `skill_idskill` (`skill_idskill`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `group_has_skill`
--

INSERT INTO `group_has_skill` (`group_id`, `skill_idskill`, `importance`) VALUES
(27, 69, 1),
(27, 73, 3),
(27, 76, 3),
(27, 77, 2),
(27, 81, 2),
(27, 102, 1),
(27, 119, 0),
(27, 303, 0),
(27, 394, 1),
(27, 405, 3),
(27, 406, 1),
(27, 407, 2),
(27, 408, 2),
(27, 409, 1),
(27, 410, 1),
(27, 411, 2),
(27, 412, 2),
(27, 413, 2),
(27, 414, 1),
(27, 415, 1),
(27, 416, 2),
(27, 417, 2),
(27, 418, 0),
(27, 419, 2),
(28, 89, 0),
(28, 119, 2),
(28, 261, 0),
(28, 275, 0),
(28, 389, 0),
(28, 396, 1),
(28, 397, 0),
(28, 398, 2),
(28, 399, 1),
(28, 400, 0),
(28, 405, 0),
(28, 406, 0),
(29, 117, 1),
(29, 398, 0),
(29, 405, 2),
(29, 419, 3);

-- --------------------------------------------------------

--
-- Table structure for table `location`
--

CREATE TABLE IF NOT EXISTS `location` (
  `id` char(6) NOT NULL,
  `name` varchar(255) DEFAULT NULL,
  `timezone` varchar(5) DEFAULT NULL,
  `countryCode` varchar(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `location`
--

INSERT INTO `location` (`id`, `name`, `timezone`, `countryCode`) VALUES
('ABH', 'Auburn Hills, United States', 'GMT-5', 'US'),
('BBU', 'Babenhausen, Germany', 'GMT+9', 'DE'),
('GDL', 'Guadalajara, Mexico', 'GMT-5', 'MX'),
('NJG', 'Nanjing, China', 'GMT+9', 'CN'),
('SGP', 'Singapore', 'GMT+0', 'SG'),
('TSR', 'Timisoara, Romania', 'GMT+9', 'RO'),
('WHU', 'Wuhu, China', 'GMT+9', 'CN');

-- --------------------------------------------------------

--
-- Table structure for table `location_has_employee`
--

CREATE TABLE IF NOT EXISTS `location_has_employee` (
  `location_id` char(6) NOT NULL,
  `employee_coreID` char(6) NOT NULL,
  PRIMARY KEY (`location_id`,`employee_coreID`),
  KEY `fk_location_has_employee_location` (`location_id`),
  KEY `fk_location_has_employee_employee` (`employee_coreID`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `location_has_skill`
--

CREATE TABLE IF NOT EXISTS `location_has_skill` (
  `location_id` char(6) NOT NULL,
  `skill_idskill` int(11) NOT NULL,
  PRIMARY KEY (`location_id`,`skill_idskill`),
  KEY `fk_location_has_skill_location` (`location_id`),
  KEY `fk_location_has_skill_skill` (`skill_idskill`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `log`
--

CREATE TABLE IF NOT EXISTS `log` (
  `idlog` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` varchar(50) NOT NULL,
  `insert_timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `action` varchar(100) NOT NULL,
  `table_name` varchar(100) NOT NULL,
  `info` text NOT NULL,
  PRIMARY KEY (`idlog`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;

--
-- Dumping data for table `log`
--

INSERT INTO `log` (`idlog`, `user_id`, `insert_timestamp`, `action`, `table_name`, `info`) VALUES
(1, 'id4888', '2017-07-05 19:47:15', 'insert', 'skill', '[{"idskill":{"newValue":426},"description":{"newValue":"dummy"}}]'),
(2, 'id4888', '2017-07-05 19:47:15', 'insert', 'skill_has_skill', '[{"skill_idskill":{"newValue":"258"},"skill_idskill1":{"newValue":426}}]');

-- --------------------------------------------------------

--
-- Table structure for table `skill`
--

CREATE TABLE IF NOT EXISTS `skill` (
  `idskill` int(11) NOT NULL AUTO_INCREMENT,
  `description` varchar(255) NOT NULL,
  `complexity` int(11) NOT NULL DEFAULT '0',
  `detailedDesc` text,
  PRIMARY KEY (`idskill`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT AUTO_INCREMENT=427 ;

--
-- Dumping data for table `skill`
--

INSERT INTO `skill` (`idskill`, `description`, `complexity`, `detailedDesc`) VALUES
(0, 'generic', 0, NULL),
(1, 'Analog', 0, ''),
(2, 'eQADC', 0, NULL),
(3, 'PDI', 0, NULL),
(4, 'MOST/MLB', 0, NULL),
(5, 'I2C', 0, NULL),
(6, 'FEC', 0, NULL),
(7, 'FlexRay', 0, NULL),
(8, 'EBI', 0, NULL),
(9, 'Flexcan', 0, NULL),
(10, 'eSCI', 0, NULL),
(11, 'DSPI', 0, NULL),
(12, 'SIMD', 0, NULL),
(13, 'WDT', 0, NULL),
(14, 'Dual Core', 0, NULL),
(15, 'Core', 0, NULL),
(16, 'VLE', 0, NULL),
(17, 'DMA', 0, NULL),
(18, 'JTAG', 0, NULL),
(19, 'Nexus', 0, NULL),
(20, 'Cache', 0, NULL),
(21, 'MPU', 0, NULL),
(22, 'Flash', 0, NULL),
(23, 'MMU', 0, NULL),
(24, 'ECSM', 0, NULL),
(25, 'Freemaster', 0, NULL),
(26, 'Dual Controller', 0, NULL),
(27, 'CAL', 0, NULL),
(28, 'Optimisation', 0, NULL),
(29, 'Code port', 0, NULL),
(30, 'Architecture', 0, NULL),
(31, 'LPM', 0, NULL),
(32, 'Supply', 0, NULL),
(33, 'BAM', 0, NULL),
(34, 'INTC', 0, NULL),
(35, 'Pbridge', 0, NULL),
(36, 'SWT', 0, NULL),
(37, 'XBAR', 0, NULL),
(38, 'SIU', 0, NULL),
(39, 'eTPU', 0, NULL),
(40, 'eMIOS', 0, NULL),
(41, 'Analogue', 0, NULL),
(42, 'Comms', 0, NULL),
(43, 'Core', 0, NULL),
(44, 'Debug', 0, 'Debug'),
(45, 'Memory', 0, NULL),
(46, 'Other', 0, NULL),
(47, 'Power', 0, NULL),
(48, 'Reset and Interrupts', 0, NULL),
(49, 'System Config', 0, NULL),
(50, 'Timing', 0, NULL),
(52, 'Market', 3, ''),
(53, 'metering', 3, 'NULL'),
(54, 'driver assistance', 3, 'NULL'),
(55, 'powertrain', 3, 'It includes Engine Control and Management Interfaces as well as Hybrid and Electric Auxiliaries'),
(56, 'body electronics', 3, 'Includes Body Control Mouduel & Gateway, Access and Remote Control, Heating Ventilation and Air Conditioning (HVAC), Automotive Lighting, Doors, Window Lift and Seat Control'),
(57, 'cluster', 3, 'An automotive instrument cluster control system is the brains behind the car dashboard, powering all analog gauges, displays, LED warning lights and sound signals. Its primary functions are communicating with external data sources and controlling data output devices. With the number of data sources on the rise and the increasing use of in-vehicle connectivity, instrument cluster control systems are providing limited gateway functionality.'),
(58, 'engine control', 3, 'NULL'),
(59, 'appliance', 3, 'Specifically: A non-manual apparatus or device, powered electrically or by another small motor, used in homes to perform domestic functions (household appliance) and/or in offices'),
(60, 'medical', 3, 'NULL'),
(61, 'building automation', 3, 'Includes Access and Remote Control, Fingerprint recognition, Building Monitoring, Lighting, Voice Control, etc'),
(62, 'remote control', 3, 'NULL'),
(63, 'gaming', 3, 'NULL'),
(64, 'HVAC and pump controllers', 3, 'Heating Ventilation and Air Conditioning (HVAC) systems deliver air to the vehicle interior to provide comfort to passengers. These systems typically have to control several motors (for blower and flaps), based on different inputs (e.g., temperature).'),
(65, 'PC peripherals', 3, 'NULL'),
(66, 'power generation', 3, 'NULL'),
(67, 'Hardware', 3, 'Hardware (HW) related skills. It includes digital, analog, processes, mechanical, etc.'),
(68, 'Analog HW', 3, 'Analog hardware related skills.Those electronic systems with a continuously variable signal.'),
(69, 'Power supplies', 3, 'Power supplies'),
(70, 'analog circuitry', 3, 'Covers areas realted to analog hardware circuitry, such as filters, supplies, etc. '),
(71, 'Digital HW', 3, 'Digital Hardware related skills'),
(72, 'HDL', 3, 'In electronics, a hardware description language or HDL is any programming languages for formal description of digital logic and electronic circuits. It can describe the circuit''s operation, its design and organization, and tests to verify its operation by means of simulation.Verilog and VHDL are examples of HDLs'),
(73, 'high-speed digital design', 3, 'Skills realted with high speed digital design. These skills encompass knowledge of signal integrity, crosstalk, line termination, etc'),
(74, 'Hardware processes', 3, 'Processes and tools used for hardware design'),
(75, 'schematic capture', 3, 'Schematic capture or schematic entry is a step in the design cycle of electronic design automation (EDA) at which the electronic diagram, or electronic schematic of the designed electronic circuit is created by a designer. This includes the handling of software packages such as: OrCAD, EGLE, Electronics Workbench, It also includes the creation of symbols'),
(76, 'EMC ', 3, 'Electromagnetic compatibility (EMC) is the branch of electrical sciences which studies the unintentional generation, propagation and reception of electromagnetic energy with reference to the unwanted effects (Electromagnetic interference, or EMI) that such energy may induce. '),
(77, 'PCB layout', 3, 'This includes the handling of software packages such as Eagle, OrCAD (Cadence), Allegro (Cadence), Expedition (Mentor Graphics)'),
(78, 'Software', 3, 'software (SW) related skills. From software architecture and design, to programming languages, ADEs, and OS.'),
(79, 'sw architectures / standards', 3, 'The software architecture of a program or computing system is the structure or structures of the system, which comprise software components, the externally visible properties of those components, and the relationships between them. The term also refers to documentation of a system''s software architecture. Documenting software architecture facilitates communication between stakeholders, documents early decisions about high-level design, and allows reuse of design components and patterns between projects.'),
(80, 'sw architecture', 3, 'NULL'),
(81, 'UML', 3, 'NULL'),
(82, 'C-SAr', 3, 'The release of the Freescale Common Software Architecture (C-SAr) obeys to the need of standardizing the development of software components across Freescale Semiconductor with the primary goal of software component re-use through several projects/platforms.It aims to define the foundations of software design and implementation focused on layer-based software components rather than single all-in-one driver-through-application software solutions.'),
(83, 'AUTOSAR', 3, 'AUTOSAR (Automotive Open System Architecture) is an open and standardized automotive software architecture, jointly developed by automobile manufacturers, suppliers and tool developers.'),
(84, 'MISRA C', 3, 'MISRA C is a software development standard for the C programming language developed by MISRA (Motor Industry Software Reliability Association). Its aims are to facilitate code safety, portability and reliability in the context of embedded systems, specifically those systems programmed in ISO C. '),
(85, 'OS for embedded', 3, 'An operating system (commonly abbreviated to either OS or O/S) is an interface between hardware and user.'),
(86, 'rtos', 3, 'A Real-Time Operating System (RTOS) is a multitasking operating system intended for real-time applications.'),
(87, 'qnx neutrino', 3, 'QNX is a commercial Unix-like real-time operating system, developed by Windriver, aimed primarily at the embedded systems market.'),
(88, 'vxworks', 3, 'NULL'),
(89, 'green hills integrity', 3, 'NTEGRITY is a real-time operating system (RTOS) produced and marketed by Green Hills Software. It is royalty-free, POSIX-certified, and intended for use in embedded systems needing reliability, availability, and fault tolerance'),
(90, 'FreeRTOS', 3, 'FreeRTOS is a real-time operating system for embedded devices, being ported to several microcontrollers. It is distributed under the GPL with an optional exception. The exception permits users'' proprietary code to remain closed source while maintaining the kernel itself as open source, thereby facilitating the use of FreeRTOS in commercial applications.'),
(91, 'MQX', 3, 'NULL'),
(92, 'task scheduler', 3, 'NULL'),
(93, 'linux', 3, 'This includes Linux in general, from kernel to distributions. Using it or developing for it.'),
(94, 'linux app dev', 3, 'Application development experience in Linux'),
(95, 'linux driver dev', 3, 'Device driver development in Linux'),
(96, 'win ce', 3, 'NULL'),
(97, 'win ce app dev', 3, 'Application development experience in Windows CE or Windows Auto'),
(98, 'win driver dev', 3, 'NULL'),
(99, 'filesystem', 3, 'NULL'),
(100, 'Programming languages', 3, 'Programming languages can be used to create programs that specify the behavior of a machine, to express algorithms precisely, or as a mode of human communication.'),
(101, 'assembly x86', 3, 'A program written in assembly language consists of a series of instructions--mnemonics that correspond to a stream of executable instructions, when translated by an assembler, that can be loaded into memory and executed.'),
(102, 'c', 3, 'C is a general-purpose computer programming language developed in 1972. Worldwide, C is the first or second most popular language in terms of number of developer positions or publicly available code'),
(103, 'c++', 3, 'C++ ("C Plus Plus") is a general-purpose programming language. It is regarded as a middle-level language, as it comprises a combination of both high-level and low-level language features. C++ is an (OOP) object-oriented programming language'),
(104, 'java', 3, 'Java is a programming language originally developed in 1995 as a core component of Sun Microsystems'' Java platform. The language derives much of its syntax from C and C++ but has a simpler object model and fewer low-level facilities. This is an OOP'),
(105, 'labview', 3, 'LabVIEW is a platform and development environment for a visual programming language from National Instruments.'),
(106, 'scripts', 3, 'NULL'),
(107, 'visual basic', 3, 'Visual Basic (VB) is the third-generation event-driven programming language and integrated development environment (IDE) from Microsoft for its COM programming model.'),
(108, 'matlab', 3, 'MATLAB is a numerical computing environment and programming language. Maintained by The MathWorks, MATLAB allows easy matrix manipulation, plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs in other languages.'),
(109, 'html', 3, 'HTML, HyperText Markup Language, is the predominant markup language for Web pages'),
(110, 'delphi', 3, 'Object Pascal refers to a branch of object-oriented derivatives of Pascal, mostly known as the primary programming language of CodeGear Delph. This is also an OOP'),
(111, 'flash', 3, 'NULL'),
(112, 'external flash', 3, 'NULL'),
(113, 'embedded flash', 3, 'NULL'),
(114, 'IDE', 3, 'An integrated development environment (IDE) also known as integrated design environment or integrated debugging environment is a software application that provides comprehensive facilities to computer programmers for software development.'),
(115, 'codewarrior', 3, 'CodeWarrior is an integrated development environment (IDE). '),
(116, 'eclipse', 3, 'Eclipse is a multi-language software development platform comprising an IDE and a plug-in system to extend it'),
(117, 'Databases', 3, 'A database is a structured collection of records or data that is stored in a computer system. The model in most common use today is the relational model. Common database technologies are SQL, mySQL, Access.'),
(118, 'JIRA', 3, 'Change Management Tool'),
(119, 'HMI', 3, 'Human-Machine Interfaces for embedded'),
(120, 'Products', 3, 'Product related skills'),
(121, 'MPR - Sensors', 3, 'NULL'),
(122, 'VKSP', 3, 'NULL'),
(123, '8-bit', 3, 'NULL'),
(124, 'RS08', 3, 'The RS08 core is a reduced version of the S08 central processing unit (CPU) that has been specifically designed for small pin-count devices with under 16KB memory.8-bit MCU Family'),
(125, 'S08', 3, 'High-performance and low power, the HCS08 does not sacrifice performance to provide low power 1.8 V operation.8-bit MCU Family'),
(126, '16-bit', 3, 'NULL'),
(127, 'DSC - 56800E', 3, 'It combines, on a single chip, the processing power of a digital signal processor (DSP) and the functionality of a microcontroller (MCU) with a flexible set of peripherals to create a cost-effective solution for industrial control, motion control, home appliances, general-purpose inverters, smart sensors, advanced lighting, fire and security systems, switched-mode power supply, power management, and medical monitoring applications.These are 16-bit'),
(128, 'S12/S12x', 3, 'General purpose 16-bit MCUs'),
(129, '32-bit', 3, 'Includes 32-bit MCUs and MPUs'),
(130, 'coldfire', 3, 'In 1994, The innovative ColdFire Microprocessor family was added to Freescale''s legacy 68K Family tree. The ColdFire variable-length RISC 68K family architecture delivers the aggressive price and performance required by the cost-sensitive embedded market.'),
(131, 'v1 MCU', 3, 'Designed for entry-level 32-bit applications, the V1 ColdFire'),
(132, 'v2 MCU', 3, 'The ColdFire V2 core is based on a memory-configurable hierarchical architecture that is 100 percent synthesizable and specifically designed for reuse and ease of integration into custom designs'),
(133, 'v2-v5 MPU', 3, 'These are higher performance cores, enhanced with a refined instruction prefetch pipeline, branch prediction capabilities, and higher frequencies of operation.'),
(134, 'PowerPc', 3, 'A.K.A. Power Architecture'),
(135, 'applications / BSP', 3, 'NULL'),
(136, 'core / architecture', 3, 'NULL'),
(137, 'Power Quick', 3, 'NULL'),
(138, 'app / BSP', 3, 'NULL'),
(139, 'core / arch', 3, 'NULL'),
(140, 'i.MX', 3, 'These 32-bit MPUs have an ARM Core'),
(141, 'Technologies', 3, 'NULL'),
(142, 'USB', 3, 'NULL'),
(143, 'USB PHY', 3, 'NULL'),
(144, 'USB SW stack', 3, 'NULL'),
(145, 'ethernet', 3, 'Ethernet is a family of frame-based computer networking technologies for local area networks (LANs).'),
(146, 'ethernet PHY', 3, 'Physical layer of the Ethernet'),
(147, 'ethernet SW stack', 3, 'Software stack for the Ethernet'),
(148, 'CAN', 3, 'Controllerarea network (CAN or CAN-bus) is a vehicle bus standard designed to allow microcontrollers and devices to communicate with each other within a vehicle without a host computer.'),
(149, 'CAN PHY', 3, 'Physical layer of the CAN (Controllerarea network)'),
(150, 'CAN SW stack', 3, 'Software stack for the CAN (Controllerarea network)'),
(151, 'motor controll', 3, 'NULL'),
(152, 'motor control HW', 3, 'NULL'),
(153, 'motor control SW', 3, 'NULL'),
(154, 'PCI', 3, 'NULL'),
(155, 'flexRay', 3, 'NULL'),
(156, 'touch sensing', 3, 'NULL'),
(157, 'LIN', 3, 'The LIN-Bus (Local Interconnect Network) is a vehicle bus standard or computer networking bus-system used within current automotive network architectures.'),
(158, 'ZigBee', 3, 'ZigBee is a specification for a suite of high level communication protocols using small, low-power digital radios based on the IEEE 802.15.4-2003 standard for wireless personal area networks (WPANs)'),
(159, 'DMA', 3, 'NULL'),
(160, 'DDR', 3, 'NULL'),
(161, 'PATA', 3, 'AT Attachment (ATA) and AT Attachment Packet Interface (ATAPI) are interface standards for the connection of storage devices such as hard disks, solid-state drives, and CD-ROM drives in computers. Many near-synonyms for ATA/ATAPI and its previous incarnations exist, including abbreviations such as IDE which are still in common informal use. ATA was retroactively renamed Parallel ATA (PATA).'),
(162, 'SATA', 3, 'The Serial ATA (SATA) computer bus is a storage-interface for connecting host bus adapters (most commonly integrated into laptop computers and desktop motherboards) to mass storage devices (such as hard disk drives and optical drives).'),
(163, 'SD Cards', 3, 'Secure Digital (SD) is a non-volatile memory card. The format has proven to be very popular. A change in the format, however, while allowing capacities greater than 4 GB (SDHC), has created compatibility issues with older devices that cannot read the new format. '),
(164, 'cryptography', 3, 'Cryptography is the practice and study of hiding information. In modern times cryptography is considered a branch of both mathematics and computer science and is affiliated closely with information theory, computer security and engineering. Cryptography is used in applications present in technologically advanced societies; examples include the security of ATM cards, computer passwords and electronic commerce which all depend on cryptography.'),
(165, 'digital signal processing', 3, 'Digital signal processing (DSP) is concerned with the representation of the signals by a sequence of numbers or symbols and the processing of these signals.'),
(166, 'graphic libraries', 3, 'SW libraries like OpenGL, OpenVG, DirectX, Qt'),
(167, 'RF', 3, 'NULL'),
(168, 'industrial protocols', 3, 'NULL'),
(169, 'J1939', 3, 'SAE J1939 is the vehicle bus standard used for communication and diagnostics among vehicle components, originally by the car and heavy duty truck industry in the United States.'),
(170, 'low power', 3, 'NULL'),
(171, 'FSL process', 3, 'NULL'),
(172, 'CMMI', 3, 'NULL'),
(173, 'DPC', 3, 'NULL'),
(174, 'NPI', 3, 'NULL'),
(175, 'Makefiles', 2, 'NULL'),
(176, 'MPC512x', 3, 'MPC512x PowerPC family'),
(177, 'Cayman', 3, ''),
(178, 'MPC5121e', 3, ''),
(179, 'DIU', 1, 'DIU'),
(180, 'Paulo', 0, ''),
(181, 'MPC521x USB module', 3, 'Contains knowledge about the USB modules of the MPC512x familiy'),
(182, 'R&D Auto Apps', 3, ''),
(189, 'MSG Auto', 0, 'This node contains all skills that are not part of the MEL'),
(190, 'macromedia flash', 0, 'All versions of Macromedia flash, now Adobe Flash'),
(191, 'mpc5121e', 0, ''),
(192, 'cayman', 0, ''),
(193, 'DIU mpc512x', 0, ''),
(194, 'VIU mpc512x', 0, ''),
(195, 'i2c mpc512x', 0, ''),
(196, 'mpc512x / mpc5200', 0, ''),
(197, 'MBX mpc5121', 0, ''),
(198, 'mpc5200', 0, ''),
(200, 'Modul Expertise List', 0, 'Modul Expertise List'),
(203, 'Hard skills', 0, 'Hard skills'),
(217, 'recursive', 0, ''),
(220, 'Quality Processes', 0, 'Processes used for Quality Assurance'),
(221, 'ISO-TS', 0, 'The aim of ISO/TS16949 is the development of a quality management system that provides for continual improvement, emphasizing defect prevention and the reduction of variation and waste in the supply chain. TS16949 applies to the design/development, production and, when relevant, installation and servicing of automotive-related products. It is based on ISO9000.'),
(222, 'Debugging Methodologies', 0, 'Methodologies used by the Field Quality Engineering (FQE) group to debug issues'),
(223, '8 D''s', 0, 'The  8 Disciplines (8D) process  is a problem management tool popularly used in responding to customer returns or issues.Discipline 1. Form the TeamDiscipline 2. Describe the ProblemDiscipline 3. Contain the ProblemDiscipline 4. Identify the Root CauseDiscipline 5. Formulate and Verify Corrective Actions Discipline 6. Correct the Problem and Confirm the EffectsDiscipline 7. Prevent the ProblemDiscipline 8. Congratulate the Team'),
(224, '5 Whys', 0, 'The 5 Whys is a question-asking method used to explore the cause/effect relationships underlying a particular problem. Ultimately, the goal of applying the 5 Whys method is to determine a root cause of a defect or problem.   1. Why? - The battery is dead. (first why)   2. Why? - The alternator is not functioning. (second why)   3. Why? - The alternator belt has broken. (third why)   4. Why? - The alternator belt was well beyond its useful service life and has never been replaced. (fourth why)   5. Why? - I have not been maintaining my car according to the recommended service schedule. (fifth why, root cause)'),
(225, 'IS NOT', 0, ''),
(226, 'Fishbone diagrams', 0, 'Also known as Ishikawa diagram.These are diagrams, that shows the causes of a certain event. A common use of the Ishikawa diagram is in product design, to identify potential factors causing an overall effect.'),
(227, 'Six Sigma', 0, 'Six Sigma is a business management strategy, initially implemented by Motorola, that today enjoys widespread application in many sectors of industry.Six Sigma seeks to identify and remove the causes of defects and errors in manufacturing and business processes. It uses a set of quality management methods, including statistical methods, and creates a special infrastructure of people within the organization ("Black Belts" etc.) who are experts in these methods'),
(228, 'automotive market', 0, ''),
(229, 'consumer market', 0, ''),
(230, 'industrial market', 0, ''),
(231, '908', 0, '8-bit MCU Family'),
(233, 'web languages', 0, 'programming languages predominantly used in web-page development'),
(234, 'PHP', 0, 'PHP is a scripting language originally designed for producing dynamic web pages. It has evolved to include a command line interface capability and can be used in standalone graphical applications'),
(235, 'bus systems', 0, 'contains all kind of bus systems: can, i2c, ...'),
(236, 'memory ', 0, 'all related to memory'),
(237, 'wireless', 0, 'wireless technologies'),
(238, 'bluetooth', 0, 'Bluetooth is an open wireless protocol for exchanging data over short distances from fixed and mobile devices, creating personal area networks (PANs). It was originally conceived as a wireless alternative to RS232 data cables'),
(239, 'javaScript', 0, 'JavaScript is a scripting language used to enable programmatic access to objects within other applications. It is primarily used in the form of client-side JavaScript for the development of dynamic websites.'),
(240, 'Sensors', 0, 'Sensor products include Accelerometers, Pressure sensors and proximity sensors'),
(241, 'Instrument Clusters', 0, 'Instrument Clusters'),
(242, 'office software', 0, 'including Microsoft Office Software but also Software like Framemaker, Tabasco, ...'),
(243, 'web launch', 0, 'The process for launching new PSPs and TSPs.'),
(244, 'microsoft excel', 0, 'Microsoft Excel skills'),
(245, 'microsoft word ', 0, 'who knows to do all that fancy stuff you can do with microsoft word...'),
(246, 'web publishing', 0, 'The process to publish new documents, web pages, and in general web maintenance'),
(247, 'LaTeX', 0, 'LaTeX is a document markup language and document preparation system for the TeX typesetting program. Within the typesetting system, its name is styled as .LaTeX is most widely used by mathematicians, scientists, engineers, philosophers, scholars in academia and the commercial world, and other professionals. As a primary or intermediate format (e.g. translating DocBook and other XML-based formats to PDF), LaTeX is used because of the high quality of typesetting achievable by TeX. The typesetting system offers programmable desktop publishing features and extensive facilities for automating most aspects of typesetting and desktop publishing, including numbering and cross-referencing, tables and figures, page layout and bibliographies.'),
(248, 'Framemaker', 0, ''),
(249, 'motor control', 0, ''),
(250, 'DC motor control', 0, 'A DC motor works by converting electric power into mechanical work. This is accomplished by forcing current through a coil and producing a magnetic field that spins the motor. The simplest DC motor is a single coil apparatus, used here to discuss the DC motor theory.'),
(251, 'FSL tools', 0, 'Tools and systems used in Freescale'),
(252, 'Teamsite', 0, 'Web content management system for web publications'),
(253, 'EBI', 0, ''),
(254, 'MAT / PAT', 0, 'Miscellaneous Administration Tool and Part Administration Tool'),
(255, 'EC motor control', 0, 'The term EC is applied to a DC motor having electronic commutation achieved with a microprocessor.Commutation means applying a current to the motor phases to produce the best torque at the motor’s shaft. In brush-type motors, commutation is done electromechanically using graphite brushes and a commutator. In brushless motors, however, it is achieved by switching electronics using rotor-position information obtained by sensors.'),
(256, 'Webtrends', 0, ''),
(257, '.NET', 0, ''),
(258, 'Soft skills', 0, 'Soft skills is a sociological term which refers to the cluster of personality traits, social graces, communication, language, personal habits, friendliness, and optimism that mark us Soft skills complement hard skills, which are the technical requirements of a job'),
(259, 'Languages', 0, 'All languages other than programming languages...'),
(260, 'German', 0, 'Sprichst Du Deutsch?'),
(261, 'English', 0, ''),
(262, 'Spanish', 0, ''),
(263, 'French', 0, ''),
(264, 'Chinese', 0, ''),
(265, 'communication', 0, 'Communication skills include skills like:Free speach, presentations, communicate feedback, feel comfortable in customer communication. But also concrete techniques like NLP, ... '),
(266, 'neuro-linguistic programming', 0, 'Neuro-linguistic programming (NLP) is defined in the Oxford English Dictionary as "a model of interpersonal communication chiefly concerned with the relationship between successful patterns of behaviour and the subjective experiences (esp. patterns of thought) underlying them" and "a system of alternative therapy based on this which seeks to educate people in self-awareness and effective communication, and to change their patterns of mental and emotional behaviour"'),
(268, 'Accelerometers', 0, ''),
(269, 'Pressure sensors', 0, ''),
(270, 'proximity sensors', 0, ''),
(272, 'MQX', 0, ''),
(273, 'OSEK / AUTOSAR OS', 0, ''),
(274, 'uC/OS II', 0, ''),
(275, 'Presentation skills', 0, 'Public speaking without making attendees fall asleep'),
(277, 'ADCs / DACs', 0, 'Analog-to-Digital Converters and Digital-to-Analog Converters'),
(278, 'LCDs', 0, 'A liquid crystal display (LCD) is an electronically-modulated optical device shaped into a thin, flat panel made up of any number of color or monochrome pixels filled with liquid crystals and arrayed in front of a light source (backlight) or reflector'),
(279, 'Graphic LCDs', 0, 'Graphical Liquid Crystal Displays'),
(280, 'debug interfaces', 0, 'Interfaces used for debugging (such as JTAG and BDM)'),
(281, 'JTAG', 0, 'Joint Test Action Group (JTAG) is the common name used for the IEEE 1149.1 standard entitled Standard Test Access Port and Boundary-Scan Architecture for test access ports used for testing printed circuit boards using boundary scan. JTAG is often used as an IC debug or probing port.'),
(282, 'BDM', 0, 'Background Debug Mode (BDM) interface is an electronic interface that allows debugging of embedded systems. Specifically, it provides in-circuit debugging functionality in microcontrollers. It requires a single wire and specialized electronics in the system being debugged.'),
(283, 'Nexus', 0, 'Nexus or IEEE-ISTO 5001-2003 is a standard debugging interface for embedded systems.'),
(284, 'connectivity', 0, ''),
(285, 'serial interfaces', 0, ''),
(286, 'SCC', 0, 'Serial Communications Controller (a device used for ethernet transmission)'),
(287, 'I2C', 0, 'I2C (Inter-Integrated Circuit) is a multi-master serial computer bus invented by Philips that is used to attach low-speed peripherals to a motherboard, embedded system, or cellphone.'),
(288, 'SPI', 0, 'The Serial Peripheral Interface Bus or SPI bus is a synchronous serial data link standard named by Motorola that operates in full duplex mode.'),
(289, 'UART', 0, 'A universal asynchronous receiver/transmitter (UART) is a type of "asynchronous receiver/transmitter", a piece of computer hardware that translates data between parallel and serial forms. UARTs are commonly used in conjunction with other communication standards such as EIA RS-232.'),
(290, 'IrDA', 0, 'The Infrared Data Association (IrDA) defines physical specifications communications protocol standards for the short-range exchange of data over infrared light, for uses such as personal area networks (PANs).'),
(291, 'Bootloader', 0, 'In computing, booting (booting up) is a bootstrapping process that starts operating systems when the user turns on a computer system. A boot sequence is the initial set of operations that the computer performs when it is switched on. The bootloader typically loads the main operating system for the computer.'),
(292, 'Subversion', 0, 'Subversion (SVN) is a version control system initiated in 2000 by CollabNet Inc. It is used to maintain current and historical versions of files such as source code, web pages, and documentation. Its goal is to be a mostly-compatible successor to the widely used Concurrent Versions System (CVS).'),
(293, 'CVS', 0, 'In the field of software development, the Concurrent Versions System (CVS), also known as the Concurrent Versioning System, is a free software revision control system. Version control system software keeps track of all work and all changes in a set of files, and allows several developers (potentially widely separated in space and/or time) to collaborate'),
(294, 'Japanese', 0, ''),
(295, 'Greek', 0, ''),
(296, 'WCO Software', 0, 'Software process used by WCO to develop IEEE 80.15.4 Stacks '),
(297, 'TRAC', 0, 'Bug & Change requests tracking tool'),
(298, 'HW Tools', 0, 'HW Tools'),
(299, 'Cadence PCB editor', 0, ''),
(300, 'Cadence Design entry CIS', 0, ''),
(301, 'PSpice', 0, 'Hardware simulator'),
(302, 'Agile', 0, 'Product database management'),
(303, 'manufacturing', 0, 'manufactoring process'),
(304, 'analog filter design', 0, 'active and passiv'),
(305, 'antenna design', 0, ''),
(306, 'high frequency PCB design', 0, ''),
(307, 'FPGA', 0, ''),
(308, 'Sensor Networks', 0, 'ZigBee and friends'),
(309, 'HUDs', 0, 'Head Up Displays'),
(310, 'Software engineering', 0, 'Contains Software lifcycle'),
(311, 'Requirements Management', 0, ''),
(312, 'Configuration Management', 0, 'Configuration Management'),
(313, 'Quality Assurance', 0, ''),
(314, 'Testing', 0, ''),
(315, 'SPICE', 0, 'Standard process in Automotive SIG'),
(316, 'IAR EWARM IDE', 0, 'IDE & Compilers from IAR, for AMR and other MCUs'),
(317, 'Windows .NET microframework', 0, 'used to be Windows CE'),
(318, 'C#', 0, ''),
(319, 'Python', 0, ''),
(320, 'XML', 0, ''),
(321, 'Software tools', 0, 'Tools used for software development'),
(322, 'MKS', 0, 'Configuration Management tool'),
(323, 'Microsoft Project Manager', 0, ''),
(324, 'Primavera', 0, 'Project Management tool'),
(325, 'GIT', 0, 'Configuration Management Tool'),
(326, 'perl', 0, ''),
(327, 'TCL', 0, 'Scripting lenguage, available in Unix, Linux and Windows'),
(328, 'Grails', 0, 'high-productivity web framework'),
(329, 'Groovy', 0, 'java Scripting tool'),
(330, 'Joomla', 0, 'Colaborative framework for PHP'),
(331, 'TK', 0, 'Tool to create User Interfase in TCL'),
(332, 'Maven', 0, 'Software program management tool based on Java'),
(333, 'Web tools', 0, ''),
(334, 'Apache', 0, ''),
(335, 'TomCat', 0, ''),
(336, 'HTTP', 0, ''),
(337, 'ClearCase', 0, ''),
(338, 'ClearQuest', 0, ''),
(339, 'Doors', 0, ''),
(340, 'GIT', 0, ''),
(341, 'Power QUICC', 0, ''),
(342, 'QoIQ', 0, ''),
(343, 'MPC55xx', 0, ''),
(344, 'RedBoot', 0, ''),
(345, 'Uboot', 0, ''),
(346, 'eCos', 0, ''),
(347, 'VxWorks', 0, ''),
(348, 'Linux RT', 0, ''),
(349, 'assembly PPC', 0, ''),
(350, 'assembly ARM', 0, ''),
(351, 'assembly 68k', 0, ''),
(352, 'assembly 8-bit', 0, ''),
(353, 'assembly 16-bit', 0, ''),
(354, 'CMSIS', 0, ''),
(355, 'Posix', 0, ''),
(356, 'Segment LCDs', 0, ''),
(357, 'FSL test', 0, ''),
(359, 'NPI dummy test', 0, ''),
(360, 'Mechanical', 0, 'Skills and competencies used in Mechanical Engineering'),
(361, 'Touch technologies', 0, 'Technologies related to touch sensing, such as haptics, proximity, etc'),
(362, 'Haptics', 0, 'Haptics (pronounced HAP-tiks) is the science of applying touch (tactile) sensation and control to interaction with computer applications'),
(363, 'Proximity sensing', 0, ''),
(364, 'Touch sensing', 0, ''),
(365, 'Optics', 0, ''),
(366, 'Optics for HUDs', 0, ''),
(367, 'Requirements', 0, ''),
(368, 'DOORs', 0, 'Rational Dynamic Object Oriented Requirements System (DOORS) (formerly Telelogic DOORS) is a requirement management tool.[4] It is a client?server application, with a Windows-only client and servers for Linux, Windows, and Solaris. There is also a web client, DOORS Web Access.'),
(369, 'Thermal management', 0, ''),
(370, 'Thermal management', 0, ''),
(371, 'Colors and Illumination', 0, ''),
(372, 'Optical bonding', 0, ''),
(373, 'Requirements management', 0, ''),
(374, 'Light projection', 0, ''),
(375, 'Finite element analysis', 0, 'The finite element method (FEM) is a numerical method for solving problems of engineering and mathematical physics. It is also referred to as finite element analysis (FEA).'),
(376, 'Die Casting', 0, ''),
(377, 'Glueing', 0, ''),
(378, 'Microstructures', 0, ''),
(379, 'Creo 2.0', 0, 'CAD Tool'),
(380, 'Agile Methodologies', 0, 'Description Blah'),
(381, 'Scrum', 0, ''),
(382, 'Kanban', 0, 'Kanban'),
(383, 'Compilers', 0, ''),
(384, 'Disciplines', 0, 'Discipline related skills'),
(385, 'Systems', 0, 'System engineering related skills'),
(386, 'Functional Testing', 0, 'Functional Testing related skills'),
(388, 'FDC & IIP', 0, 'Full Digital Clusters & Interior Integrated Platform'),
(389, 'Interior Camera', 0, 'Interior Camera'),
(390, 'Input Devices and Displays', 0, 'Input Devices and Displays'),
(391, 'Negotiation', 0, 'Negotiation'),
(392, 'Problem Solving', 0, 'Problem Solving'),
(393, 'Italian', 0, 'Italian'),
(394, 'Altia', 0, 'Altia'),
(395, 'Artemis / AMT', 0, 'Artemis / AMT'),
(396, 'AUTOSAR', 0, 'AUTOSAR'),
(397, 'OSEK', 0, 'OSEK'),
(398, 'Integration', 0, 'Integration'),
(399, 'JCP2016', 0, 'JCP2016'),
(400, 'JCP2011', 0, 'JCP2011'),
(401, 'DFSS', 0, 'Design For Six-Sigma'),
(402, 'Functional Saftey', 0, 'Functional Saftey'),
(403, 'FMVSS', 0, 'Federal Motor Vehicle Safety Standards'),
(404, 'ASPICE', 0, 'ASPICE'),
(405, 'Debugging', 0, 'Debugging'),
(406, 'SW Module Design', 0, 'SW Module Design'),
(407, 'Static Code Analysis', 0, 'Static Code Analysis'),
(408, 'Vehicle architecture', 0, 'Vehicle architecture'),
(409, 'PTM', 0, 'PTM'),
(410, 'Test Boxes', 0, 'Test Boxes'),
(411, 'Image processing for testing', 0, 'Image processing for testing'),
(412, 'Test case design', 0, 'Test case design'),
(413, 'Vehicle test', 0, 'Vehicle test'),
(414, 'Instrumentation', 0, 'Instrumentation'),
(415, 'EVTP Planning', 0, 'EVTP Planning'),
(416, 'Worst-case analysis', 0, 'Worst-case analysis'),
(417, 'Design of mechanical parts', 0, 'Design of mechanical parts'),
(418, 'PCC (ME)', 0, 'PCC (ME)'),
(419, 'Continuous integration', 0, 'Continuous integration'),
(420, 'Latin', 0, 'Latin'),
(421, 'Nahuatl', 0, ''),
(422, 'RCT', 0, 'RCT'),
(426, 'dummy', 0, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `skill_has_skill`
--

CREATE TABLE IF NOT EXISTS `skill_has_skill` (
  `idshs` int(11) NOT NULL AUTO_INCREMENT,
  `skill_idskill` int(11) NOT NULL,
  `skill_idskill1` int(11) NOT NULL,
  PRIMARY KEY (`idshs`),
  KEY `fk_skill_has_skill_skill` (`skill_idskill`),
  KEY `fk_skill_has_skill_skill1` (`skill_idskill1`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=378 ;

--
-- Dumping data for table `skill_has_skill`
--

INSERT INTO `skill_has_skill` (`idshs`, `skill_idskill`, `skill_idskill1`) VALUES
(1, 0, 203),
(2, 0, 258),
(3, 41, 1),
(4, 41, 2),
(5, 42, 3),
(6, 42, 4),
(7, 42, 5),
(8, 42, 6),
(9, 42, 7),
(10, 42, 8),
(11, 42, 9),
(12, 42, 10),
(13, 42, 11),
(14, 43, 12),
(15, 43, 13),
(16, 43, 14),
(17, 43, 15),
(18, 43, 16),
(19, 43, 17),
(20, 44, 18),
(21, 44, 19),
(22, 45, 20),
(23, 45, 21),
(24, 45, 22),
(25, 45, 23),
(26, 45, 24),
(27, 46, 25),
(28, 46, 26),
(29, 46, 27),
(30, 46, 28),
(31, 46, 29),
(32, 46, 30),
(33, 47, 31),
(34, 47, 32),
(35, 48, 33),
(36, 48, 34),
(37, 49, 35),
(38, 49, 36),
(39, 49, 37),
(40, 49, 38),
(41, 50, 39),
(42, 50, 40),
(43, 52, 60),
(44, 52, 228),
(45, 52, 229),
(46, 52, 230),
(47, 67, 68),
(48, 67, 71),
(49, 67, 74),
(50, 67, 298),
(51, 67, 303),
(52, 67, 370),
(53, 67, 415),
(54, 67, 416),
(55, 68, 69),
(56, 68, 70),
(57, 68, 304),
(58, 68, 305),
(59, 68, 306),
(60, 71, 72),
(61, 71, 73),
(62, 71, 307),
(63, 74, 75),
(64, 74, 76),
(65, 74, 77),
(66, 78, 85),
(67, 78, 100),
(68, 78, 114),
(69, 78, 117),
(70, 78, 119),
(71, 78, 291),
(72, 78, 310),
(73, 78, 321),
(74, 78, 398),
(75, 78, 405),
(76, 78, 419),
(77, 79, 81),
(78, 79, 82),
(79, 79, 83),
(80, 79, 84),
(81, 79, 354),
(82, 79, 355),
(83, 85, 86),
(84, 85, 93),
(85, 85, 96),
(86, 85, 396),
(87, 85, 397),
(88, 86, 87),
(89, 86, 89),
(90, 86, 90),
(91, 86, 92),
(92, 86, 272),
(93, 86, 273),
(94, 86, 274),
(95, 86, 346),
(96, 86, 347),
(97, 86, 348),
(98, 93, 94),
(99, 93, 95),
(100, 96, 97),
(101, 96, 98),
(102, 96, 317),
(103, 100, 101),
(104, 100, 102),
(105, 100, 103),
(106, 100, 104),
(107, 100, 105),
(108, 100, 107),
(109, 100, 108),
(110, 100, 109),
(111, 100, 110),
(112, 100, 175),
(113, 100, 190),
(114, 100, 234),
(115, 100, 239),
(116, 100, 257),
(117, 100, 318),
(118, 100, 319),
(119, 100, 320),
(120, 100, 326),
(121, 100, 327),
(122, 100, 328),
(123, 100, 329),
(124, 100, 349),
(125, 100, 350),
(126, 100, 351),
(127, 100, 352),
(128, 100, 353),
(129, 111, 112),
(130, 111, 113),
(131, 114, 115),
(132, 114, 116),
(133, 114, 316),
(134, 119, 394),
(135, 119, 395),
(136, 119, 422),
(137, 120, 241),
(138, 120, 309),
(139, 120, 388),
(140, 120, 389),
(141, 120, 390),
(142, 121, 121),
(143, 121, 122),
(144, 123, 124),
(145, 123, 125),
(146, 123, 231),
(147, 126, 127),
(148, 126, 128),
(149, 129, 130),
(150, 129, 134),
(151, 129, 140),
(152, 130, 131),
(153, 130, 132),
(154, 130, 133),
(155, 134, 135),
(156, 134, 136),
(157, 134, 196),
(158, 134, 341),
(159, 134, 342),
(160, 134, 343),
(161, 141, 164),
(162, 141, 165),
(163, 141, 167),
(164, 141, 168),
(165, 141, 170),
(166, 141, 236),
(167, 141, 249),
(168, 141, 277),
(169, 141, 278),
(170, 141, 280),
(171, 141, 284),
(172, 141, 399),
(173, 141, 400),
(174, 141, 401),
(175, 141, 402),
(176, 141, 403),
(177, 141, 404),
(178, 142, 143),
(179, 142, 144),
(180, 142, 181),
(181, 145, 146),
(182, 145, 147),
(183, 171, 173),
(184, 171, 174),
(185, 171, 220),
(186, 171, 243),
(187, 171, 246),
(188, 174, 296),
(189, 174, 359),
(190, 177, 179),
(191, 177, 181),
(192, 178, 179),
(193, 178, 181),
(194, 182, 100),
(195, 182, 200),
(196, 189, 52),
(197, 189, 67),
(198, 189, 78),
(199, 189, 120),
(200, 189, 141),
(201, 189, 171),
(202, 191, 193),
(203, 191, 194),
(204, 191, 195),
(205, 191, 197),
(206, 192, 193),
(207, 192, 194),
(208, 192, 195),
(209, 196, 191),
(210, 196, 192),
(211, 196, 198),
(212, 200, 41),
(213, 200, 42),
(214, 200, 43),
(215, 200, 44),
(216, 200, 45),
(217, 200, 46),
(218, 200, 47),
(219, 200, 48),
(220, 200, 49),
(221, 200, 50),
(222, 203, 120),
(223, 203, 141),
(224, 203, 384),
(225, 217, 217),
(226, 220, 172),
(227, 220, 221),
(228, 220, 222),
(229, 220, 315),
(230, 222, 223),
(231, 222, 224),
(232, 222, 225),
(233, 222, 226),
(234, 222, 227),
(235, 228, 54),
(236, 228, 55),
(237, 228, 56),
(238, 228, 57),
(239, 228, 58),
(240, 228, 64),
(241, 229, 59),
(242, 229, 62),
(243, 229, 63),
(244, 229, 65),
(245, 229, 66),
(246, 229, 308),
(247, 230, 53),
(248, 230, 61),
(249, 233, 234),
(250, 234, 330),
(251, 235, 148),
(252, 235, 154),
(253, 235, 155),
(254, 235, 157),
(255, 235, 169),
(256, 236, 111),
(257, 236, 159),
(258, 236, 160),
(259, 236, 163),
(260, 237, 158),
(261, 237, 238),
(262, 240, 268),
(263, 240, 269),
(264, 240, 270),
(265, 242, 244),
(266, 242, 245),
(267, 242, 247),
(268, 242, 248),
(269, 242, 323),
(270, 249, 113),
(271, 249, 250),
(272, 249, 255),
(273, 251, 252),
(274, 251, 253),
(275, 251, 254),
(276, 251, 256),
(277, 251, 292),
(278, 251, 293),
(279, 251, 297),
(280, 251, 302),
(281, 251, 337),
(282, 251, 338),
(283, 251, 339),
(284, 251, 340),
(285, 251, 357),
(286, 258, 259),
(287, 258, 265),
(288, 258, 275),
(289, 258, 391),
(290, 259, 260),
(291, 259, 261),
(292, 259, 262),
(293, 259, 263),
(294, 259, 264),
(295, 259, 294),
(296, 259, 295),
(297, 259, 393),
(298, 259, 420),
(299, 259, 421),
(300, 265, 266),
(301, 265, 392),
(302, 278, 279),
(303, 278, 356),
(304, 280, 281),
(305, 280, 282),
(306, 280, 283),
(307, 284, 145),
(308, 284, 156),
(309, 284, 161),
(310, 284, 235),
(311, 284, 237),
(312, 284, 285),
(313, 285, 142),
(314, 285, 162),
(315, 285, 286),
(316, 285, 287),
(317, 285, 288),
(318, 285, 289),
(319, 285, 290),
(320, 291, 344),
(321, 291, 345),
(322, 298, 299),
(323, 298, 300),
(324, 298, 301),
(325, 310, 79),
(326, 310, 311),
(327, 310, 312),
(328, 310, 313),
(329, 310, 314),
(330, 310, 380),
(331, 310, 407),
(332, 321, 118),
(333, 321, 242),
(334, 321, 322),
(335, 321, 324),
(336, 321, 325),
(337, 321, 332),
(338, 321, 333),
(339, 327, 331),
(340, 333, 334),
(341, 334, 335),
(342, 334, 336),
(343, 360, 365),
(344, 360, 369),
(345, 360, 372),
(346, 360, 375),
(347, 360, 376),
(348, 360, 377),
(349, 360, 378),
(350, 360, 379),
(351, 360, 406),
(352, 360, 417),
(353, 360, 418),
(354, 361, 362),
(355, 361, 363),
(356, 361, 364),
(357, 365, 366),
(358, 365, 371),
(359, 365, 374),
(360, 367, 368),
(361, 367, 373),
(362, 380, 381),
(363, 380, 382),
(364, 384, 67),
(365, 384, 78),
(366, 384, 360),
(367, 384, 385),
(368, 384, 386),
(369, 385, 408),
(370, 385, 409),
(371, 385, 410),
(372, 386, 411),
(373, 411, 412),
(374, 411, 413),
(375, 411, 414),
(377, 258, 426);

-- --------------------------------------------------------

--
-- Table structure for table `team`
--

CREATE TABLE IF NOT EXISTS `team` (
  `id` char(6) NOT NULL,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `team`
--

INSERT INTO `team` (`id`, `name`) VALUES
('EE', 'Electrical Engineering'),
('FT', 'Functional Testing'),
('ME', 'Mechanical Engineering'),
('SE', 'Systems Engineering'),
('SW', 'Software Engineering');

-- --------------------------------------------------------

--
-- Table structure for table `team_has_skill`
--

CREATE TABLE IF NOT EXISTS `team_has_skill` (
  `team_id` char(6) NOT NULL,
  `skill_idskill` int(11) NOT NULL,
  `importance` tinyint(3) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`team_id`,`skill_idskill`),
  KEY `fk_team_has_skill_team` (`team_id`),
  KEY `fk_team_has_skill_skill` (`skill_idskill`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `employee`
--
ALTER TABLE `employee`
  ADD CONSTRAINT `employee_ibfk_1` FOREIGN KEY (`location_id`) REFERENCES `location` (`id`),
  ADD CONSTRAINT `employee_ibfk_2` FOREIGN KEY (`primary_team_id`) REFERENCES `team` (`id`);

--
-- Constraints for table `employee_has_skill`
--
ALTER TABLE `employee_has_skill`
  ADD CONSTRAINT `fk_employee_has_skill_employee` FOREIGN KEY (`employee_coreID`) REFERENCES `employee` (`coreID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_employee_has_skill_skill` FOREIGN KEY (`skill_idskill`) REFERENCES `skill` (`idskill`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `group_has_employee`
--
ALTER TABLE `group_has_employee`
  ADD CONSTRAINT `group_has_employee_ibfk_1` FOREIGN KEY (`employee_coreID`) REFERENCES `employee` (`coreID`),
  ADD CONSTRAINT `group_has_employee_ibfk_2` FOREIGN KEY (`group_id`) REFERENCES `group` (`id`);

--
-- Constraints for table `group_has_skill`
--
ALTER TABLE `group_has_skill`
  ADD CONSTRAINT `group_has_skill_ibfk_1` FOREIGN KEY (`skill_idskill`) REFERENCES `skill` (`idskill`),
  ADD CONSTRAINT `group_has_skill_ibfk_2` FOREIGN KEY (`group_id`) REFERENCES `group` (`id`);

--
-- Constraints for table `location_has_employee`
--
ALTER TABLE `location_has_employee`
  ADD CONSTRAINT `fk_location_has_employee_employee` FOREIGN KEY (`employee_coreID`) REFERENCES `employee` (`coreID`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_location_has_employee_location` FOREIGN KEY (`location_id`) REFERENCES `location` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `location_has_skill`
--
ALTER TABLE `location_has_skill`
  ADD CONSTRAINT `fk_location_has_skill_location` FOREIGN KEY (`location_id`) REFERENCES `location` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_location_has_skill_skill` FOREIGN KEY (`skill_idskill`) REFERENCES `skill` (`idskill`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `skill_has_skill`
--
ALTER TABLE `skill_has_skill`
  ADD CONSTRAINT `fk_skill_has_skill_skill` FOREIGN KEY (`skill_idskill`) REFERENCES `skill` (`idskill`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_skill_has_skill_skill1` FOREIGN KEY (`skill_idskill1`) REFERENCES `skill` (`idskill`) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Constraints for table `team_has_skill`
--
ALTER TABLE `team_has_skill`
  ADD CONSTRAINT `fk_team_has_skill_skill` FOREIGN KEY (`skill_idskill`) REFERENCES `skill` (`idskill`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_team_has_skill_team` FOREIGN KEY (`team_id`) REFERENCES `team` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
